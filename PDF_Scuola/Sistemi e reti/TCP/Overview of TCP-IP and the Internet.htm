<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0045)http://www.garykessler.net/library/tcpip.html -->
<HTML><HEAD><TITLE>Overview of TCP/IP and the Internet</TITLE>
<META content="text/html; charset=windows-1252" http-equiv=Content-Type>
<META name=keywords 
content="TCP/IP tutorial, TCP tutorial, IP tutorial, TCP/IP training, TCP/IP education, TCP/IP consulting">
<META name=GENERATOR content="MSHTML 9.00.8112.16457"></HEAD>
<BODY bgColor=#ffffff><FONT size=3>
<CENTER>
<H2><FONT color=blue face=arial>An Overview of TCP/IP Protocols<BR>and the 
Internet<BR></FONT></H2>
<H3>Gary C. Kessler<BR><A 
href="mailto:gck@garykessler.net">gck@garykessler.net</A><BR>9 November 
2010<BR></H3>
<BLOCKQUOTE>
  <H4>This paper was originally submitted to the InterNIC and posted on their 
  Gopher site on 5 August 1994. This document is a continually updated version 
  of that paper. </H4></BLOCKQUOTE></CENTER>
<HR>

<CENTER>
<H3>Contents</H3></CENTER>
<UL><A href="http://www.garykessler.net/library/tcpip.html#intro"><B>1. 
  Introduction</B></A><BR><A 
  href="http://www.garykessler.net/library/tcpip.html#what"><B>2. What are 
  TCP/IP and the Internet?</B></A><BR>
  <UL><A href="http://www.garykessler.net/library/tcpip.html#evol">2.1. The 
    Evolution of TCP/IP (and the Internet)</A><BR><A 
    href="http://www.garykessler.net/library/tcpip.html#growth">2.2. Internet 
    Growth</A><BR><A 
    href="http://www.garykessler.net/library/tcpip.html#admin">2.3. Internet 
    Administration</A><BR><A 
    href="http://www.garykessler.net/library/tcpip.html#domain_names">2.4. 
    Domain Names and IP Addresses (and Politics)</A><BR></UL><A 
  href="http://www.garykessler.net/library/tcpip.html#arch"><B>3. The TCP/IP 
  Protocol Architecture</B></A><BR>
  <UL><A href="http://www.garykessler.net/library/tcpip.html#netint">3.1. The 
    Network Interface Layer</A><BR>
    <UL><A href="http://www.garykessler.net/library/tcpip.html#ppp">3.1.1. 
      PPP</A><BR></UL><A 
    href="http://www.garykessler.net/library/tcpip.html#IP">3.2. The Internet 
    Layer</A><BR>
    <UL><A href="http://www.garykessler.net/library/tcpip.html#IPadd">3.2.1. 
      IP Addressing and Subnet Masks</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#IPcidr">3.2.2. 
      Conserving IP Addresses: CIDR, DHCP, NAT, and PAT</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#IPdns">3.2.3. The 
      Domain Name System</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#ARP">3.2.4. ARP and 
      Address Resolution</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#IProute">3.2.5. IP 
      Routing: OSPF, RIP, and BGP</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#IPv6">3.2.6. IP 
      version 6</A><BR></UL><A 
    href="http://www.garykessler.net/library/tcpip.html#transport">3.3. The 
    Transport Layer Protocols</A><BR>
    <UL><A href="http://www.garykessler.net/library/tcpip.html#ports">3.3.1. 
      Ports</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#TCP">3.3.2. 
      TCP</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#UDP">3.3.3. 
      UDP</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#ICMP">3.3.4. 
      ICMP</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#connect">3.3.5. TCP 
      Logical Connections and ICMP</A><BR></UL><A 
    href="http://www.garykessler.net/library/tcpip.html#applayer">3.4. The 
    TCP/IP Application Layer</A><BR>
    <UL><A href="http://www.garykessler.net/library/tcpip.html#apps">3.4.1. 
      TCP and UDP Applications</A><BR><A 
      href="http://www.garykessler.net/library/tcpip.html#analysis">3.4.2. 
      Protocol Analysis</A><BR></UL><A 
    href="http://www.garykessler.net/library/tcpip.html#summary">3.5. 
    Summary</A><BR></UL><A 
  href="http://www.garykessler.net/library/tcpip.html#info"><B>4. Other 
  Information Sources</B></A><BR><A 
  href="http://www.garykessler.net/library/tcpip.html#acro"><B>5. Acronyms and 
  Abbreviations</B></A><BR><A 
  href="http://www.garykessler.net/library/tcpip.html#author"><B>6. Author's 
  Address</B></A><BR></UL>
<HR>

<BLOCKQUOTE><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=intro>1. 
  Introduction</A></FONT></H3></CENTER>
  <P>An increasing number of people are using the Internet and, many for the 
  first time, are using the tools and utilities that at one time were only 
  available on a limited number of computer systems (and only for really intense 
  users!). One sign of this growth in use has been the significant number of 
  Transmission Control Protocol/Internet Protocol (TCP/IP) and Internet books, 
  articles, courses, and even TV shows that have become available in the last 
  several years; there are so many such books that publishers are reluctant to 
  authorize more because bookstores have reached their limit of shelf space! 
  This memo provides a broad overview of the Internet and TCP/IP, with an 
  emphasis on history, terms, and concepts. It is meant as a brief guide and 
  starting point, referring to many other sources for more detailed 
  information.</P><BR><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=what>2. What are TCP/IP and the 
  Internet?</A></FONT></H3></CENTER>
  <P>While the TCP/IP protocols and the Internet <I>are</I> different, their 
  histories are most definitely intertwingled! This section will discuss some of 
  the history. For additional information and insight, readers are urged to read 
  two excellent histories of the Internet: <I>Casting The Net: From ARPANET to 
  INTERNET and beyond...</I> by Peter Salus (Addison-Wesley, 1995) and <I>Where 
  Wizards Stay Up Late: The Origins of the Internet</I> by Katie Hafner and Mark 
  Lyon (Simon &amp; Schuster, 1997). In addition, the Internet Society maintains 
  a number of on-line "Internet history" papers at <A 
  href="http://www.isoc.org/internet/history/" 
  target=_blank>http://www.isoc.org/internet/history/</A>. <BR><BR><A name=evol>
  <H4>2.1. The Evolution of TCP/IP (and the Internet)</H4></A>
  <P>While the Internet today is recognized as a network that is fundamentally 
  changing social, political, and economic structures, and in many ways 
  obviating geographic boundaries, this potential is merely the realization of 
  predictions that go back nearly forty years. In a series of memos dating back 
  to August 1962, J.C.R. Licklider of MIT discussed his "Galactic Network" and 
  how social interactions could be enabled through networking. The Internet 
  certainly provides such a national and global infrastructure and, in fact, 
  interplanetary Internet communication has already been seriously 
discussed.</P>
  <P>Prior to the 1960s, what little computer communication existed comprised 
  simple text and binary data, carried by the most common telecommunications 
  network technology of the day; namely, circuit switching, the technology of 
  the telephone networks for nearly a hundred years. Because most data traffic 
  is bursty in nature (i.e., most of the transmissions occur during a very short 
  period of time), circuit switching results in highly inefficient use of 
  network resources.</P>
  <P>The fundamental technology that makes the Internet work is called <I>packet 
  switching</I>, a data network in which all components (i.e., hosts and 
  switches) operate independently, eliminating single point-of-failure problems. 
  In addition, network communication resources appear to be dedicated to 
  individual users but, in fact, statistical multiplexing and an upper limit on 
  the size of a transmitted entity result in fast, economical networks.</P>
  <P>In the 1960s, packet switching was ready to be discovered. In 1961, Leonard 
  Kleinrock of MIT published the first paper on packet switching theory (and the 
  first book on the subject in 1964). In 1962, Paul Baran of the Rand 
  Corporation described a robust, efficient, store-and-forward data network in a 
  report for the U.S. Air Force. At about the same time, Donald Davies and Roger 
  Scantlebury suggested a similar idea from work at the National Physical 
  Laboratory (NPL) in the U.K. The research at MIT (1961-1967), RAND 
  (1962-1965), and NPL (1964-1967) occurred independently and the principal 
  researchers did not all meet together until the Association for Computing 
  Machinery (ACM) meeting in 1967. The term <I>packet</I> was adopted from the 
  work at NPL.</P>
  <P>The modern Internet began as a U.S. Department of Defense (DoD) funded 
  experiment to interconnect DoD-funded research sites in the U.S. The 1967 ACM 
  meeting was also where the initial design for the so-called ARPANET — named 
  for the DoD's Advanced Research Projects Agency (ARPA) — was first published 
  by Larry Roberts. In December 1968, ARPA awarded a contract to Bolt Beranek 
  and Newman (BBN) to design and deploy a packet switching network with a 
  proposed line speed of 50 kbps. In September 1969, the first node of the 
  ARPANET was installed at the University of California at Los Angeles (UCLA), 
  followed monthly with nodes at Stanford Research Institute (SRI), the 
  University of California at Santa Barbara (UCSB), and the University of Utah. 
  With four nodes by the end of 1969, the ARPANET spanned the continental U.S. 
  by 1971 and had connections to Europe by 1973.</P>
  <P>The original ARPANET gave life to a number of protocols that were new to 
  packet switching. One of the most lasting results of the ARPANET was the 
  development of a user-network protocol that has become the standard interface 
  between users and packet switched networks; namely, ITU-T (formerly CCITT) 
  Recommendation X.25. This "standard" interface encouraged BBN to start 
  Telenet, a commercial packet-switched data service, in 1974; after much 
  renaming, Telenet became a part of Sprint's X.25 service.</P>
  <P>The initial host-to-host communications protocol introduced in the ARPANET 
  was called the Network Control Protocol (NCP). Over time, however, NCP proved 
  to be incapable of keeping up with the growing network traffic load. In 1974, 
  a new, more robust suite of communications protocols was proposed and 
  implemented throughout the ARPANET, based upon the Transmission Control 
  Protocol (TCP) for end-to-end network communication. But it seemed like 
  overkill for the intermediate gateways (what we would today call 
  <I>routers</I>) to needlessly have to deal with an end-to-end protocol so in 
  1978 a new design split responsibilities between a pair of protocols; the new 
  Internet Protocol (IP) for routing packets and device-to-device communication 
  (i.e., host-to-gateway or gateway-to-gateway) and TCP for reliable, end-to-end 
  host communication. Since TCP and IP were originally envisioned functionally 
  as a single protocol, the protocol suite, which actually refers to a large 
  collection of protocols and applications, is usually referred to simply as 
  <I>TCP/IP</I>.</P>
  <P>The original versions of both TCP and IP that are in common use today were 
  written in September 1981, although both have had several modifications 
  applied to them (in addition, the IP version 6, or IPv6, specification was 
  released in December 1995). In 1983, the DoD mandated that all of their 
  computer systems would use the TCP/IP protocol suite for long-haul 
  communications, further enhancing the scope and importance of the ARPANET.</P>
  <P>In 1983, the ARPANET was split into two components. One component, still 
  called ARPANET, was used to interconnect research/development and academic 
  sites; the other, called MILNET, was used to carry military traffic and became 
  part of the Defense Data Network. That year also saw a huge boost in the 
  popularity of TCP/IP with its inclusion in the communications kernel for the 
  University of California s UNIX implementation, 4.2BSD (Berkeley Software 
  Distribution) UNIX.</P>
  <P>In 1986, the National Science Foundation (NSF) built a backbone network to 
  interconnect four NSF-funded regional supercomputer centers and the National 
  Center for Atmospheric Research (NCAR). This network, dubbed the NSFNET, was 
  originally intended as a backbone for other networks, not as an 
  interconnection mechanism for individual systems. Furthermore, the 
  "Appropriate Use Policy" defined by the NSF limited traffic to non-commercial 
  use. The NSFNET continued to grow and provide connectivity between both 
  NSF-funded and non-NSF regional networks, eventually becoming the backbone 
  that we know today as the Internet. Although early NSFNET applications were 
  largely multiprotocol in nature, TCP/IP was employed for interconnectivity 
  (with the ultimate goal of migration to Open Systems Interconnection).</P>
  <P>The NSFNET originally comprised 56-kbps links and was completely upgraded 
  to T1 (1.544 Mbps) links in 1989. Migration to a "professionally-managed" 
  network was supervised by a consortium comprising Merit (a Michigan state 
  regional network headquartered at the University of Michigan), IBM, and MCI. 
  Advanced Network &amp; Services, Inc. (ANS), a non-profit company formed by 
  IBM and MCI, was responsible for managing the NSFNET and supervising the 
  transition of the NSFNET backbone to T3 (44.736 Mbps) rates by the end of 
  1991. During this period of time, the NSF also funded a number of regional 
  Internet service providers (ISPs) to provide local connection points for 
  educational institutions and NSF-funded sites.</P>
  <P>In 1993, the NSF decided that it did not want to be in the business of 
  running and funding networks, but wanted instead to go back to the funding of 
  research in the areas of supercomputing and high-speed communications. In 
  addition, there was increased pressure to commercialize the Internet; in 1989, 
  a trial gateway connected MCI, CompuServe, and Internet mail services, and 
  commercial users were now finding out about all of the capabilities of the 
  Internet that once belonged exclusively to academic and hard-core users! In 
  1991, the <A href="http://en.wikipedia.org/wiki/Commercial_Internet_eXchange" 
  target=_blank>Commercial Internet Exchange (CIX) Association</A> was formed by 
  General Atomics, Performance Systems International (PSI), and UUNET 
  Technologies to promote and provide a commercial Internet backbone service. 
  Nevertheless, there remained intense pressure from non-NSF ISPs to open the 
  network to all users.</P><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><IMG 
        src="Overview%20of%20TCP-IP%20and%20the%20Internet_file/nsfnetmap.gif"><BR><B>FIGURE 
        1. NSFNET structure initiated in 1994 to merge the academic and 
        commercial networks.</B> </TR></TBODY></TABLE></CENTER><BR>
  <P>In 1994, a plan was put in place to reduce the NSF's role in the public 
  Internet. The new structure comprises three parts:</P>
  <OL>
    <LI><I><A href="http://en.wikipedia.org/wiki/Network_access_point" 
    target=_blank>Network Access Points (NAPs)</A></I>, where individual ISPs 
    would interconnect, as suggested in Figure 1. The NSF originally funded four 
    such NAPs: Chicago (operated by Ameritech), New York (really Pensauken, NJ, 
    operated by Sprint), San Francisco (operated by Pacific Bell, now SBC), and 
    Washington, D.C. (MAE-East, operated by MFS, now part of Worldcom). 
    <LI>The <I><A 
    href="http://www.caida.org/publications/papers/1994/1994ar/Annual94/node29.html" 
    target='_"blank"'>very High Speed Backbone Network Service</A></I>, a 
    network interconnecting the NAPs and NSF-funded centers, operated by MCI. 
    This network was installed in 1995 and operated at OC-3 (155.52 Mbps); it 
    was completely upgraded to OC-12 (622.08 Mbps) in 1997. 
    <LI>The <I><A 
    href="http://www.merit.edu/networkresearch/projecthistory/routingartiber/" 
    target=_blank>Routing Arbiter</A></I>, to ensure adequate routing protocols 
    for the Internet. </LI></OL>
  <P>In addition, NSF-funded ISPs were given five years of reduced funding to 
  become commercially self-sufficient. This funding ended by 1998 and a 
  proliferation of additional NAPs have created a "melting pot" of services. 
  Today's terminology refers to three <I>tiers</I> of ISP:</P>
  <UL>
    <LI><I>Tier 1</I> refers to national ISPs, or those that have a national 
    presence and connect to at least three of the original four NAPs. National 
    ISPs include AT&amp;T, Sprint, and Worldcom. 
    <LI><I>Tier 2</I> refers to regional ISPs, or those that have primarily a 
    regional presence and connect to less than three of the original four NAPs. 
    Regional ISPs include Adelphia, BellAtlantic.net, and BellSouth.net. 
    <LI><I>Tier 3</I> refers to local ISPs, or those that do not connect to a 
    NAP but offer services via an upstream ISP. </LI></UL>
  <P>It is worth saying a few words about the NAPs. The NSF provided major 
  funding for the four NAPs mentioned above but they needed to have additional 
  customers to remain economically viable. Some companies — such as 
  then-Metropolitan Fiber Systems (MFS) — decided to build other NAP sites. One 
  of MFS' first sites was MAE-East, where "MAE" stood for "Metropolitan Area 
  Ethernet." MAE-East was merely a point where ISPs could interconnect which 
  they did by buying a router and placing it at the MAE-East facility. The 
  original MAE-East provided a 10 Mbps Ethernet LAN to interconnect the ISPs' 
  routers, hence the name. The Ethernet LAN was eventually replaced with a 100 
  Mbps FDDI ring and the "E" then became "Exchange." Over the years, MFS/MCI 
  Worldcom has added sites in San Jose, CA (MAE-West), Los Angeles, Dallas, and 
  Houston.</P>
  <P>Other companies also operate their own NAPs. <A 
  href="http://www.savvis.net/en-US/infrastructure-services/Network/Public_Internet/Pages/Home.aspx" 
  target=_blank>Savvis</A>, for example, operates an international Internet 
  service and has built more than a dozen private NAPs in North America. Many 
  large service providers go around the NAPs entirely by creating bilateral 
  agreement whereby the directly route traffic coming from one network and going 
  to the other. Before their merger in 1998, for example, MCI and LDDS Worldcom 
  had more than 10 DS-3 (44.736 Mbps) lines interconnecting the two 
networks.</P>
  <P>The <A href="http://www.nanog.org/" target=_blank>North American Network 
  Operators Group (NANOG)</A> provides a forum for the exchange of technical 
  information and the discussion of implementation issues that require 
  coordination among network service providers. Meeting three times a year, 
  NANOG is an essential element in maintaining stable Internet services in North 
  America. Initially funded by the NSF, NANOG currently receives funds from 
  conference registration fees and vendor donations.</P>
  <P>In 1988, meanwhile, the DoD and most of the U.S. Government chose to adopt 
  OSI protocols. TCP/IP was now viewed as an interim, proprietary solution since 
  it ran only on limited hardware platforms and OSI products were only a couple 
  of years away. The DoD mandated that all computer communications products 
  would have to use OSI protocols by August 1990 and use of TCP/IP would be 
  phased out. Subsequently, the U.S. Government OSI Profile (GOSIP) defined the 
  set of protocols that would have to be supported by products sold to the 
  federal government and TCP/IP was not included.</P>
  <P>Despite this mandate, development of TCP/IP continued during the late 1980s 
  as the Internet grew. TCP/IP development had always been carried out in an 
  open environment (although the size of this open community was small due to 
  the small number of ARPA/NSF sites), based upon the creed "We reject kings, 
  presidents, and voting. We believe in rough consensus and running code" 
  [<I>Dave Clark, M.I.T.</I>]. OSI products were still a couple of years away 
  while TCP/IP became, in the minds of many, the real open systems 
  interconnection protocol suite.</P>
  <P>It is not the purpose of this memo to take a position in the OSI vs. TCP/IP 
  debate (although it is absolutely clear that TCP/IP offers the primary goals 
  of OSI; namely, a universal, non-proprietary data communications protocol. In 
  fact, TCP/IP does far more than was ever envisioned for OSI — or for TCP/IP 
  itself, for that matter). But before TCP/IP prevailed and OSI sort of dwindled 
  into nothingness, many efforts were made to bring the two communities 
  together. The ISO Development Environment (ISODE) was developed in 1990, for 
  example, to provide an approach for OSI migration for the DoD. ISODE software 
  allows OSI applications to operate over TCP/IP. During this same period, the 
  Internet and OSI communities started to work together to bring about the best 
  of both worlds as many TCP and IP features started to migrate into OSI 
  protocols, particularly the OSI Transport Protocol class 4 (TP4) and the 
  Connectionless Network Layer Protocol (CLNP), respectively. Finally, a report 
  from the National Institute for Standards and Technology (NIST) in 1994 
  suggested that GOSIP should incorporate TCP/IP and drop the "OSI-only" 
  requirement. [<B>NOTE:</B> Some industry observers have pointed out that OSI 
  represents the ultimate example of a <I>sliding window</I>; OSI protocols have 
  been "two years away" since about 1986.]</P>
  <P>None of this is meant to suggest that the NSF isn't funding Internet-class 
  research networks anymore. That is just the function of <A 
  href="http://www.internet2.edu/" target=_blank>Internet2</A>, a consortium of 
  nearly 400 universities, corporations, and non-profit research oriented 
  organizations working in partnership to develop and deploy advanced network 
  applications and technologies for the next generation Internet. Goals of 
  Internet2 are to create a leading edge network capability for the national 
  research community, enable the development of new Internet-based applications, 
  and to quickly move these new network services and applications to the 
  commercial sector.</P><A name=growth>
  <H4>2.2. Internet Growth</H4></A>
  <P>In Douglas Adams' <I>The Hitchhiker's Guide to the Galaxy</I> (Pocket 
  Books, 1979), the hitchhiker describes outer space as being "...big. Really 
  big. ...vastly hugely mind-bogglingly big..." A similar description can be 
  applied to the Internet. To paraphrase the hitchhiker, you may think that your 
  750 node LAN is big, but that's just peanuts compared to the Internet.</P>
  <P>The ARPANET started with four nodes in 1969 and grew to just under 600 
  nodes before it was split in 1983. The NSFNET also started with a modest 
  number of sites in 1986. After that, the network experienced literally 
  exponential growth. Internet growth between 1981 and 1991 is documented in 
  "Internet Growth (1981-1991)" (<A 
  href="http://www.garykessler.net/library/rfc1296.txt" target=_blank>RFC 
  1296</A>).</P>
  <CENTER><IMG 
  src="Overview%20of%20TCP-IP%20and%20the%20Internet_file/hosts.png"></CENTER>
  <P>The Internet Software Consortium hosts the <A 
  href="http://www.isc.org/ds/">Internet Domain Survey</A> (with technical 
  support from Network Wizards, who originated the survey). According to their 
  chart, the Internet had nearly 30 million reachable hosts by January 1998 and 
  over 56 million by July 1999. Dedicated residential access methods, such as 
  cable modem and asymmetrical digital subscriber line (ADSL) technologies, are 
  undoubtedly the reason that this number has shot up to over 171 million by 
  January 2003. During the boom-1990s, the Internet was growing at a rate of 
  about a new network attachment every half-hour, interconnecting hundreds of 
  thousands of networks. It was estimated that the Internet was doubling in size 
  every ten to twelve months and traffic was doubling every 100 days (for 1000% 
  annual growth). For the last several year, the number of nodes has been 
  growing at a rate of about 50% annually and traffic continues to keep pace 
  with that growth.</P>
  <P>And what of the original ARPANET? It grew smaller and smaller during the 
  late 1980s as sites and traffic moved to the Internet, and was decommissioned 
  in July 1990. Cerf &amp; Kahn ("<A 
  href="http://personalpages.manchester.ac.uk/staff/m.dodge/cybergeography//atlas/historical.html" 
  target=_blank>Selected ARPANET Maps</A>," <I>Computer Communications 
  Review</I>, October 1990) re-printed a number of network maps documenting the 
  growth (and demise) of the ARPANET.</P><A name=admin>
  <H4>2.3. Internet Administration</H4></A>
  <P>The Internet has no single owner, yet everyone owns (a portion of) the 
  Internet. The Internet has no central operator, yet everyone operates (a 
  portion of) the Internet. The Internet has been compared to anarchy, but some 
  claim that it is not nearly that well organized! 
  <P>Some central authority is required for the Internet, however, to manage 
  those things that can only be managed centrally, such as addressing, naming, 
  protocol development, standardization, etc. Among the significant Internet 
  authorities are: 
  <UL>
    <LI>The <A href="http://www.isoc.org/" target=_blank>Internet Society 
    (ISOC)</A>, chartered in 1992, is a non-governmental international 
    organization providing coordination for the Internet, and its 
    internetworking technologies and applications. ISOC also provides oversight 
    and communications for the Internet Activities Board. 
    <LI>The <A href="http://www.iab.org/" target=_blank>Internet Architecture 
    (nee Activities) Board (IAB)</A> governs administrative and technical 
    activities on the Internet. 
    <LI>The <A href="http://www.ietf.org/" target=_blank>Internet Engineering 
    Task Force (IETF)</A> is one of the two primary bodies of the IAB. The 
    IETF's working groups have primary responsibility for the technical 
    activities of the Internet, including writing specifications and protocols. 
    The impact of these specifications is significant enough that ISO accredited 
    the IETF as an international standards body at the end of 1994. RFCs <A 
    href="http://www.rfc-editor.org/rfc/rfc2028.txt" target=_blank>2028</A> and 
    <A href="http://www.rfc-editor.org/rfc/rfc2031.txt" target=_blank>2031</A> 
    describe the organizations involved in the IETF standards process and the 
    relationship between the IETF and ISOC, respectively, while <A 
    href="http://www.rfc-editor.org/rfc/rfc2418.txt" target=_blank>RFC 2418</A> 
    describes the IETF working group guidelines and procedures. 
    <LI>The <A href="http://www.ietf.org/iesg.html" target=_blank>Internet 
    Engineering Steering Group (IESG)</A> is the other body of the IAB. The IESG 
    provides direction to the IETF. 
    <LI>The <A href="http://www.irtf.org/" target=_blank>Internet Research Task 
    Force (IRTF)</A> comprises a number of long-term reassert groups, promoting 
    research of importance to the evolution of the future Internet. 
    <LI>The <A href="http://www.iepg.org/" target=_blank>Internet Engineering 
    Planning Group (IEPG)</A> coordinates worldwide Internet operations. This 
    group also assists Internet Service Providers (ISPs) to interoperate within 
    the global Internet. 
    <LI>The <A href="http://www.first.org/" target=_blank>Forum of Incident 
    Response and Security Teams (FIRST)</A> is the coordinator of a number of 
    Computer Emergency Response Teams (CERTs) representing many countries, 
    governmental agencies, and ISPs throughout the world. Internet network 
    security is greatly enhanced and facilitated by the FIRST member 
    organizations. 
    <LI>The <A href="http://www.w3.org/" target=_blank>World Wide Web Consortium 
    (W3C)</A> is not an Internet administrative body, per se, but since October 
    1994 has taken a lead role in developing common protocols for the World Wide 
    Web to promote its evolution and ensure its interoperability. W3C has more 
    than 400 Member organizations internationally. The W3C, then, is leading the 
    technical evolution of the Web, having already developed more than 20 
    technical specifications for the Web's infrastructure. </LI></UL><A 
  name=domain_names>
  <H4>2.4. Domain Names and IP Addresses (and Politics)</H4></A>
  <P>Although not directly related to the administration of the Internet for 
  operational purposes, the assignment of Internet domain names (and IP 
  addresses) is the subject of some controversy and a lot of current activity. 
  Internet hosts use a hierarchical naming structure comprising a top-level 
  domain (TLD), domain and subdomain (optional), and host name. The IP address 
  space, and all TCP/IP-related numbers, have historically been managed by the 
  <A href="http://www.iana.org/" target=_blank>Internet Assigned Numbers 
  Authority (IANA)</A>. Domain names are assigned by the TLD naming authority; 
  until April 1998, the <A href="http://www.internic.net/" 
  target=_blank>Internet Network Information Center (InterNIC)</A> had overall 
  authority of these names, with NICs around the world handling non-U.S. 
  domains. The InterNIC was also responsible for the overall coordination and 
  management of the Domain Name System (DNS), the distributed database that 
  reconciles host names and IP addresses on the Internet.</P>
  <P>The InterNIC is an interesting example of the recent changes in the 
  Internet. Since early 1993, <A href="http://www.networksolutions.com/" 
  target=_blank>Network Solutions, Inc. (NSI)</A> operated the registry tasks of 
  the InterNIC on behalf of the NSF and had exclusive registration authority for 
  the <I>.com</I>, <I>.org</I>, <I>.net</I>, and <I>.edu</I> domains. NSI's 
  contract ran out in April 1998 and was extended several times because no other 
  agency was in place to continue the registration for those domains. In October 
  1998, it was decided that NSI would remain the sole administrator for those 
  domains but that a plan needed to be put into place so that users could 
  register names in those domains with other firms. In addition, NSI's contract 
  was extended to September 2000, although the registration business was opened 
  to competition in June 1999. Nevertheless, when NSI's original InterNIC 
  contract expired, IP address assignments moved to a new entity called the <A 
  href="http://www.arin.net/" target=_blank>American Registry for Internet 
  Numbers (ARIN)</A>. (And NSI itself was purchased by VeriSign in March 
  2000.)</P>
  <P>The newest body to handle governance of global Top Level Domain (gTLD) 
  registrations is the <A href="http://www.icann.org/" target=_blank>Internet 
  Corporation for Assigned Names and Numbers (ICANN)</A>. Formed in October 
  1998, ICANN is the organization designated by the U.S. <A 
  href="http://www.ntia.doc.gov/" target=_blank>National Telecommunications and 
  Information Administration (NTIA)</A> to administer the DNS. Although 
  surrounded in some early controversy (which is well beyond the scope of this 
  paper!), ICANN has received wide industry support. ICANN has created several 
  Support Organizations (SOs) to create policy for the administration of its 
  areas of responsibility, including domain names (DNSO), IP addresses (ASO), 
  and protocol parameter assignments (PSO).</P>
  <P>In April 1999, ICANN announced that five companies had been selected to be 
  part of this new <I>competitive</I> Shared Registry System for the .com, .net, 
  and .org domains. The concept was that these five organizations could accept 
  applications for names in these gTLD name spaces, with final approval by 
  ICANN. By the end of 1999, ICANN had added an additional 29 registrars and 
  there are several hundred registrars accredited by ICANN today. Definitive 
  ICANN registrar accreditation information can be found at the <A 
  href="http://www.icann.org/registrars/accredited-list.html" 
  target=_blank>ICANN-Accredited Registrars</A> page.</P>
  <P>The hierarchical structure of domain names is best understood if the domain 
  name is read from right-to-left. Internet host names end with a top-level 
  domain name. Worldwide generic top-level domains (TLDs) include the original 
  <I>.com</I>, <I>.edu</I>, <I>.gov</I>, <I>.int</I>, <I>.mil</I>, <I>.net</I>, 
  and <I>.org</I>. In November 2000, the first new set of TLDs were approved by 
  ICANN, namely, <I>.aero</I>, <I>.biz</I>, <I>.coop</I>, <I>.info</I>, 
  <I>.museum</I>, <I>.name</I>, and <I>.pro</I>. This has been followed by 
  additional TLDs over the years.</P>
  <P>At this time, ICANN administers the following TLDs:</P>
  <UL>
    <LI><A href="http://www.nic.aero/" target=_blank><I>.aero</I></A>: Reserved 
    for the global aviation community, sponsored by Societe Internationale de 
    Telecommunications Aeronautiques SC (SITA) 
    <LI><A href="http://www.registry.asia/" target=_blank><I>.asia</I></A>: 
    Reserved for the Pan-Asia and Asia Pacific region, sponsored by DotAsia 
    Organisation 
    <LI><A href="http://www.nic.biz/partners/registrars.html" 
    target=_blank><I>.biz</I></A>: Restricted to businesses, operated by 
    NeuStar, Inc. 
    <LI><A href="http://www.domini.cat/" target=_blank><I>.cat</I></A>: Reserved 
    for the Catalan linguistic and cultural community, sponsored by Fundació 
    puntCat. 
    <LI><A 
    href="http://www.verisign.com/domain-name-services/find-registrar/index.html" 
    target=_blank><I>.com</I></A>: Used by commercial organizations, operated by 
    VeriSign, Inc. 
    <LI><A href="http://directory.coop/" target=_blank><I>.coop</I></A>: 
    Reserved for business cooperatives, sponsored by Dot Cooperation LLC 
    <LI><A href="http://www.nic.info/register/find/alphabetical" 
    target=_blank><I>.info</I></A>: A general-purpose domain, operated by 
    Afilias Limited 
    <LI><A href="http://www.goto.jobs/" target=_blank><I>.jobs</I></A>: Reserved 
    for the human resource management community, sponsored by Employ Media LLC 
    <LI><A href="http://www.mtld.mobi/" target=_blank><I>.mobi</I></A>: Reserved 
    for consumers and providers of mobile products and services, sponsored by 
    mTLD Top Level Domain, Ltd. 
    <LI><A href="http://musedoma.museum/registrars.html" 
    target=_blank><I>.museum</I></A>: Reserved for museums and related persons, 
    sponsored by the Museum Domain Management Association International (MDI) 
    <LI><A href="http://www.nic.name/" target=_blank><I>.name</I></A>: 
    Restricted to individuals, operated by Verisign Information Services, Inc. 
    <LI><A 
    href="http://www.verisign.com/domain-name-services/find-registrar/index.html" 
    target=_blank><I>.net</I></A>: Originally reserved for network service 
    providers, operated by VeriSign, Inc. 
    <LI><A href="http://www.pir.org/" target=_blank><I>.org</I></A>: Reserved 
    for non-profit organizations, operated by Public Interest Registry 
    <LI><A href="http://www.registrypro.pro/" target=_blank><I>.pro</I></A>: 
    Reserved for licensed professionals, operated by Registry Services 
    Corporation (dba RegistryPro) 
    <LI><A href="http://www.telnic.org/" target=_blank><I>.tel</I></A>: Reserved 
    for individuals and businesses to store and manage their contact information 
    in the DNS, sponsored by Telnic Limited 
    <LI><A href="http://www.tralliance.info/" target=_blank><I>.travel</I></A>: 
    Reserved for entities whose primary area of activity is in the travel 
    industry, sponsored by Tralliance Registry Management Company, LLC </LI></UL>
  <P>Additional TLDs in use today are:</P>
  <UL>
    <LI><A href="http://www.educause.edu/edudomain" 
    target=_blank><I>.edu</I></A>: Educational institutions; largely limited to 
    4-year colleges and universities from about 1994 to 2001, but also includes 
    some community colleges; administered by EDUCAUSE) 
    <LI><A href="http://www.iana.org/domains/int/" target=_blank><I>.int</I>: 
    Organizations established by international treaty, administered by IANA 
    <LI><A href="http://www.dotgov.gov/" target=_blank><I>.gov</I>: U.S. Federal 
    government agencies (managed by the U.S. General Services Administration, 
    including the <I>fed.us</I> domain) 
    <LI><A href="http://www.nic.mil/" target=_blank><I>.mil</I></A>: U.S. 
    military (managed by the U.S. Department of Defense Network Information 
    Center&lt; /li&gt; </LI></UL>
  <P>Other top-level domain names use the two-letter country codes defined in <A 
  href="http://www.iso.org/iso/country_codes/iso_3166_code_lists/english_country_names_and_code_elements.htm" 
  target=_blank>ISO standard 3166</A>; <I>munnari.oz.au</I>, for example, is the 
  address of the 1990's Internet gateway to Australia and 
  <I>myo.inst.keio.ac.jp</I> is a host at the Science and Technology Department 
  of Keio University in Yokohama, Japan. Other ISO 3166-based domain country 
  codes are <I>ca</I> (Canada), <I>de</I> (Germany), <I>es</I> (Spain), 
  <I>fr</I> (France), <I>gb</I> (Great Britain) [<B>NOTE:</B> For some 
  historical reasons, the TLD <I>.gb</I> is rarely used; the TLD <I>.uk</I> 
  (United Kingdom) seems to be preferred although UK is not an official ISO 3166 
  country code.], <I>ie</I> (Ireland), <I>il</I> (Israel), <I>mx</I> (Mexico), 
  and <I>us</I> (United States). It is important to note that there is not 
  necessarily any correlation between a country code and where a host is 
  actually physically located.</P>
  <P>In addition, some countries allow their country codes to be used for other, 
  commercial purposes. E.g., the "<A href="http://website.ws/" target=_blank> 
  Web site</A>" domain <I>.ws</I> actually belongs to the country of Samoa and 
  the <A href="http://www.tv.com/" target=_blank>tv.com</A> domain belongs to 
  the country of Tuvalu.</P>
  <P>One of the most authoritative and up-to-date listings can be found at the 
  "Domain name registries around the world" page maintained by <A 
  href="http://www.norid.no/domenenavnbaser/domreg.html" target=_blank>UNINETT 
  Norid AS</A>.</P>
  <P>The host name <I>www.latimes.com</I>, for example, is assigned to a 
  computer named <I>www</I> (probably, but not necessarily, a Web server) at the 
  Los Angeles Times (<I>latimes</I>), within the commercial gTLD (<I>com</I>). 
  The host name <I>mail.sover.net</I> refers to a host (<I>mail</I>) in the 
  SoverNet domain (<I>sover</I>) within the network provider gTLD (<I>net</I>). 
  Guidelines for selecting host names is the subject of <A 
  href="http://www.rfc-editor.org/rfc/rfc1178.txt" target=_blank>RFC 
  1178</A>.</P>
  <P>There are several registries responsible for blocks of IP addresses and 
  domain naming policies around the globe. The <A href="http://www.arin.net/" 
  target=_blank>American Registry for Internet Numbers (ARIN)</A>, was 
  originally responsible for the Americas (western hemisphere) and parts of 
  Africa. In 2002, the <A href="http://lacnic.net/" target=_blank>Latin American 
  and Caribbean Internet Addresses Registry (LACNIC)</A> was officially 
  recognized and now covers Central and South America, as well as some Caribbean 
  nations. The <A href="http://www.afrinic.org/" target=_blank>African Regional 
  Internet Registry (AfriNIC)</A>has responsibility for sub-Sahara Africa. At 
  this time, ARIN only covers North America. The European and Asia-Pacific 
  naming registries are managed by <A href="http://www.ripe.net/" 
  target=_blank>Réseaux IP Européen (RIPE)</A> and the <A 
  href="http://www.apnic.net/" target=_blank>Asia-Pacific NIC (APNIC)</A>, 
  respectively.</P>
  <P>These authorities, in turn, delegate most of the country TLDs to <A 
  href="http://www.norid.no/domreg.html" target=_blank>national registries</A> 
  (such as RNP in Brazil and NIC-Mexico), which have ultimate authority to 
  assign local domain names. An excellent overview of the recent history and 
  anticipated future of the registry system can be found in "<A 
  href="http://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_4-4/regional_internet_registries.html" 
  target=_blank>Development of the Regional Internet Registry System</A>" (D. 
  Karrenberg et al.) in the <I>IP Journal</I>, Vol. 4, No. 4.</P>
  <P>Different countries may organize the country-based subdomains in any way 
  that they want. Many countries use a subdomain similar to the TLDs, so that 
  <I>.com.mx</I> and <I>.edu.mx</I> are the suffixes for commercial and 
  educational institutions in Mexico, and <I>.co.uk</I> and <I>.ac.uk</I> are 
  the suffixes for commercial and educational institutions in the United 
  Kingdom.</P>
  <P>The <I>us</I> domain is largely organized on the basis of geography or 
  function. Geographical names in the <I>us</I> name space use names of the form 
  <I>entity-name</I>.<I>city-telegraph-code</I>.<I>state-postal-code</I>.us. The 
  domain name <I>cnri.reston.va.us</I>, for example, refers to the Corporation 
  for National Research Initiatives in Reston, Virginia. Functional branches are 
  also reserved within the name space for schools (K12), community colleges 
  (CC), technical schools (TEC), state government agencies (STATE), councils of 
  governments (COG), libraries (LIB), museums (MUS), and several other generic 
  types of entities. Domain names in the state government name space usually 
  take the form <I>department</I>.state.<I>state-postal-code</I>.us (e.g., the 
  domain name <I>dps.state.vt.us</I> points to the Vermont Department of Public 
  Safety). The K12 name space can vary widely, usually using the form 
  <I>school</I>.<I>school-district</I>.k12.<I>state-postal-code</I>.us (e.g., 
  the domain <I>ccs.cssd.k12.vt.us</I> refers to the Charlotte Central School in 
  the Chittenden South School District which happens to be in Charlotte, 
  Vermont.) More information about the <I>us</I> domain may be found in <A 
  href="http://www.rfc-editor.org/rfc/rfc1480.txt" target=_blank>RFC 
  1480</A>.</P>
  <P>The biggest change to the TLD process was the introduction, in 2010, of 
  TLDs that do not use Latin characters. These <A 
  href="http://www.icann.org/en/topics/idn/" target=_blank>Internationalized 
  Domain Names</A> are described in detail at <A 
  href="http://www.icann.org/en/maps/idntld.htm" target=_blank>ICANN's Web 
  site</A>. More information about TLDs, the registration process, and new TLDs 
  can be found at the ICANN <A href="http://www.icann.org/tlds/" 
  target=_blank>New TLD Program</A> Web page.</P>
  <P>Last but not least, there is the never-ending issue of who owns domain 
  names and IP addresses. I will make no claim to provide an authoritative 
  answer but... domain names are owned by whoever registers them. This alone is 
  a potential problem. Some ISPs are obtaining names on behalf of their 
  customers <I>and paying the annual fee</I>. The issue has already arisen, "Who 
  owns the name? The registrar or the customer?" Most ISPs have stated that they 
  believe that the customer owns the name, even if the ISP registers the name, 
  because there would be no reason for them to keep the name. Consider, however, 
  that <I>if</I> an ISP insisted that it owned a name, it essentially ties a 
  customer to an ISP forever, destroying the concept of domain name 
  portability.</P>
  <P>There is also an issue of violation of trademark, service mark, or 
  copyright in the choice and ownership of domain names. Consider this example 
  from the 2001 era. A common Microsoft tag line is <I>Where Would You Like to 
  go Today?</I> It so happens that the domain name 
  <I>wherewouldyouliketogotoday.com</I> was registered to The Eagles Nest in 
  Corfu, NY. I don't know anything about The Eagles Nest of Corfu, NY but it 
  should not be mistaken for either Eagles Nest Enterprises of Grapevine, TX 
  (the owner of <I>eaglesnest.com</I>) nor The Eagles Nest Internet Services of 
  Newark, OH (owner of <I>theeaglesnest.com</I>).</P>
  <P>In any case, suppose that Microsoft decided that someone using their 
  service mark was not in their best interest and they pursued the issue; could 
  they wrestle that domain name away from another registrant? Today's general 
  rule of thumb is that if an organization believes that it's name or mark is 
  being used in someone else's domain name in an unfair or misleading way, then 
  they can take legal action against the name holder and the assignment of the 
  name will be held up pending the outcome of the legal action. More information 
  about this issue can be found at ICANN's <A 
  href="http://www.icann.org/udrp/udrp.htm" target=_blank>Uniform Domain-Name 
  Dispute-Resolution Policy</A> Web page. By the way, this is, of course, the 
  question behind the new industry of cybersquatting; someone registers a domain 
  name hoping that someone else with buy it from them later on!</P>
  <P>And what about IP addresses? Prior to the widespread use of CIDR (see <A 
  href="http://www.garykessler.net/library/tcpip.html#IPadd">Section 3.2.1</A>), 
  individual organizations were assigned an address (usually a Class C!) and 
  domain name at the same time. In general, the holder of the domain name owned 
  the IP address and if they changed ISP, routing tables throughout the Internet 
  were updated.</P>
  <P>After 1994, domain name and IP number ownership were separated. Today, ISPs 
  are assigned addresses in blocks called <I>CIDR blocks</I>. A customer today, 
  whether they already own a domain name or are obtaining a new one, will be 
  assigned an IP address from the ISP's CIDR block. If the customer changes ISP, 
  they have to relinquish the IP address.</P>
  <P>A good overview of the naming and addressing procedures can be found in <A 
  href="http://www.rfc-editor.org/rfc/rfc2901.txt" target=_blank>RFC 2901</A>, 
  titled "Guide to Administrative Procedures of the Internet 
  Infrastructure."</P><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=arch>3. The TCP/IP Protocol 
  Architecture</A></FONT></H3></CENTER>
  <P>TCP/IP is most commonly associated with the Unix operating system. While 
  developed separately, they have been historically tied, as mentioned above, 
  since 4.2BSD Unix started bundling TCP/IP protocols with the operating system. 
  Nevertheless, TCP/IP protocols are available for all widely-used operating 
  systems today and native TCP/IP support is provided in OS/2, OS/400, all 
  Windows versions since Windows 9x, and all Linux and Unix variants. 
  <P>Figure 2 shows the TCP/IP protocol architecture; this diagram is by no 
  means exhaustive, but shows the major protocol and application components 
  common to most commercial TCP/IP software packages and their relationship. 
  <BR><BR><BR>
  <CENTER>
  <TABLE border=0>
    <TBODY>
    <TR>
      <TD align=right><B>Application<BR>Layer</B></TD>
      <TD bgColor=red align=center><FONT size=3 face=Arial><B>HTTP&nbsp; 
        &nbsp;FTP&nbsp; &nbsp;Telnet&nbsp; &nbsp;Finger&nbsp; &nbsp; 
        &nbsp;SSH&nbsp; &nbsp;DNS<BR>POP3/IMAP&nbsp; &nbsp;SMTP&nbsp; 
        &nbsp;Gopher&nbsp; &nbsp;BGP<BR>Time/NTP&nbsp; &nbsp;Whois&nbsp; 
        &nbsp;TACACS+&nbsp; &nbsp;SSL</B></FONT></TD>
      <TD bgColor=red align=center><FONT size=3 face=Arial><B>DNS&nbsp; 
        &nbsp;SNMP&nbsp; &nbsp;RIP<BR>RADIUS&nbsp; 
        &nbsp;Archie<BR>Traceroute&nbsp; &nbsp;tftp</B></FONT></TD>
      <TD bgColor=red align=center><FONT size=3 
      face=Arial><B>Ping</B></FONT></TD>
      <TD></TD>
      <TD></TD></TR>
    <TR>
      <TD align=right><B>Transport<BR>Layer</B></TD>
      <TD bgColor=lime align=center><FONT size=3 
        face=Arial><B><BR>TCP<BR><BR></B></FONT></TD>
      <TD bgColor=lime align=center><FONT size=3 
        face=Arial><B><BR>UDP<BR><BR></B></FONT></TD>
      <TD bgColor=lime align=center><FONT size=3 
        face=Arial><B><BR>ICMP<BR><BR></B></FONT></TD>
      <TD bgColor=lime align=center><FONT size=3 
        face=Arial><B><BR>OSPF<BR><BR></B></FONT></TD></TR>
    <TR>
      <TD align=right><B>Internet<BR>Layer</B></TD>
      <TD bgColor=aqua colSpan=4 align=center><FONT size=3 
        face=Arial><B><BR>IP<BR><BR></B></FONT></TD>
      <TD bgColor=aqua align=center><FONT size=3 
        face=Arial><B><BR>ARP<BR><BR></B></FONT></TD></TR>
    <TR>
      <TD align=right><B>Network<BR>Interface<BR>Layer</B></TD>
      <TD bgColor=yellow colSpan=5 align=center><FONT size=3 
        face=Arial><B>Ethernet/802.3&nbsp; &nbsp;Token Ring (802.5)&nbsp; 
        &nbsp;SNAP/802.2&nbsp; &nbsp;X.25&nbsp; &nbsp;FDDI&nbsp; 
        &nbsp;ISDN<BR>Frame Relay&nbsp; &nbsp;SMDS&nbsp; &nbsp;ATM&nbsp; 
        &nbsp;Wireless (WAP, CDPD, 802.11)<BR>Fibre Channel&nbsp; 
        &nbsp;DDS/DS0/T-carrier/E-carrier&nbsp; &nbsp;SONET/SDH&nbsp; 
        &nbsp;DWDM<BR>PPP&nbsp; &nbsp;HDLC&nbsp; &nbsp;SLIP/CSLIP&nbsp; 
        &nbsp;xDSL&nbsp; &nbsp;Cable Modem (DOCSIS)</B></FONT></TD></TR>
    <TR>
      <TD colSpan=6><BR><B>FIGURE 2. Abbreviated TCP/IP protocol 
    stack.</B></TD></TR></TBODY></TABLE></CENTER><BR>
  <P>The sections below will provide a brief overview of each of the layers in 
  the TCP/IP suite and the protocols that compose those layers. A large number 
  of books and papers have been written that describe all aspects of TCP/IP as a 
  protocol suite, including detailed information about use and implementation of 
  the protocols. Some good TCP/IP references are:</P>
  <UL>
    <LI><I>TCP/IP Illustrated, Volume I: The Protocols</I> by W.R. Stevens 
    (Addison-Wesley, 1994) 
    <LI><I>Troubleshooting TCP/IP</I> by Mark Miller (John Wiley &amp; Sons, 
    1999) 
    <LI><I>Guide to TCP/IP</I>, 2/e by Laura A. Cappell and Ed Tittel (Thomson 
    Course Technology, 2004) 
    <LI><I>TCP/IP: Architecture, Protocols, and Implementation with IPv6 and IP 
    Security</I> by S. Feit (McGraw-Hill, 2000) 
    <LI><I>Internetworking with TCP/IP, Vol. I: Principles, Protocols, and 
    Architecture</I>, 2/e, by D. Comer (Prentice-Hall, 1991) 
    <LI>"TCP/IP Tutorial" by T.J. Socolofsky and C.J. Kale (<A 
    href="http://www.rfc-editor.org/rfc/rfc1180.txt" target=_blank> RFC 
    1180</A>, Jan. 1991) 
    <LI>"<A href="http://www.garykessler.net/download/tcpip/tcpip_prg.pdf" 
    target=_blank> TCP/IP and tcpdump Pocket Reference Guide</A>," developed by 
    the author for The SANS Institute </LI></UL><A name=netint>
  <H4>3.1. The Network Interface Layer</H4></A>
  <P>The TCP/IP protocols have been designed to operate over nearly any 
  underlying local or wide area network technology. Although certain 
  accommodations may need to be made, IP messages can be transported over all of 
  the technologies shown in the figure, as well as numerous others. It is beyond 
  the scope of this paper to describe most of these underlying protocols and 
  technologies. 
  <P>Two of the underlying network interface protocols, however, are 
  particularly relevant to TCP/IP. The Serial Line Internet Protocol (SLIP, <A 
  href="http://www.rfc-editor.org/rfc/rfc1055.txt" target=_blank>RFC 1055</A>) 
  and Point-to-Point Protocol (PPP, <A 
  href="http://www.rfc-editor.org/rfc/rfc1661.txt" target=_blank>RFC 1661</A>), 
  respectively, may be used to provide data link layer protocol services where 
  no other underlying data link protocol may be in use, such as in leased line 
  or dial-up environments. Most commercial TCP/IP software packages for PC-class 
  systems include these two protocols. With SLIP or PPP, a remote computer can 
  attach directly to a host server and, therefore, connect to the Internet using 
  IP rather than being limited to an asynchronous connection. <BR><BR><A 
  name=ppp><I>3.1.1. PPP</I></A> 
  <P>It is worth spending a little bit of time discussing PPP because of its 
  importance in Internet access today. As its name implies, PPP was designed to 
  be used over point-to-point links. In fact, it is the prevalent IP 
  encapsulation scheme for dedicated Internet access as well as dial-up access. 
  One of the significant strengths of PPP is its ability to negotiate a number 
  of things upon initial connection, including passwords, IP addresses, 
  compression schemes, and encryption schemes. In addition, PPP provides support 
  for simultaneous multiple protocols over a single connection, an important 
  consideration in those environments where dial-up users can employ either IP 
  or another network Layer protocol. Finally, in environments such as ISDN, PPP 
  supports inverse multiplexing and dynamic bandwidth allocation via the 
  Multilink-PPP (ML-PPP) described in RFCs <A 
  href="http://www.rfc-editor.org/rfc/rfc1990.txt" target=_blank>1990</A> and <A 
  href="http://www.rfc-editor.org/rfc/rfc2125.txt" target=_blank>2125</A>. 
  <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE> +----------+----------+----------+-------------+---------+--------+----------+ 
 |   Flag   | Address  | Protocol | Information | Padding |  FCS   |   Flag   |
 | 01111110 | 11111111 | 8/16 bits|      *      |    *    | 8 bits | 01111110 |
 +----------+----------+----------+-------------+---------+--------+----------+
</PRE><B>FIGURE 3. PPP frame format (using HDLC).</B> 
  </TR></TBODY></TABLE></CENTER>
  <P>PPP generally uses an HDLC-like (bit-oriented protocol) frame format as 
  shown in Figure 3, although RFC 1661 does not demand use of HDLC. HDLC defines 
  the first and last two fields in the frame: 
  <UL>
    <LI><I>Flag:</I> The 8-bit pattern "01111110" used to delimit the beginning 
    and end of the transmission. 
    <LI><I>Address:</I> For PPP, uses the 8-bit broadcast address, "11111111". 
    <LI><I>Frame Check Sequence (FCS):</I> An 8-bit remainder from a cyclic 
    redundancy check (CRC) calculation, used for bit error detection. </LI></UL>
  <P>RFC 1661 actually describes the use of the three other fields in the frame: 

  <UL>
    <LI><I>Protocol:</I> An 8- or 16-bit value that indicates the type of 
    datagram carried in this frame's Information field. This field can indicate 
    use of a particular Network Layer protocol (such as IP, IPX, or DDP), a 
    Network Control Protocol (NCP) in support of one of the Network Layer 
    protocols, or a PPP Link-layer Control Protocol (LCP). The entire list of 
    possible PPP values in this field can be found in the <A 
    href="http://www.iana.org/assignments/ppp-numbers" target=_blank>IANA list 
    of PPP protocols</A>. 
    <LI><I>Information:</I> Contains the datagram for the protocol specified in 
    the Protocol field. This field is zero or more octets in length, up to a 
    (default) maximum of 1500 octets (although a different value can be 
    negotiated). 
    <LI><I>Padding:</I> Optional padding to add length to the Information field. 
    May be required in some implementations to ensure some minimum frame length 
    and/or to ensure some alignment on computer word boundaries. </LI></UL>
  <P>The operation of PPP is as follows: 
  <OL>
    <LI>After the link is physically established, each host sends LCP packets to 
    configure and test the data link. It is here where the maximum frame length, 
    authentication protocol (Password Authentication Protocol, PAP, or 
    Challenge-Handshake Authentication Protocol, CHAP), link quality protocol, 
    compression protocol, and other configuration parameters are negotiated. 
    Authentication, <I>if</I> it used, will occur after the link has been 
    established. 
    <LI>After the link is established, one or more Network Layer protocol 
    connections are configured using the appropriate NCP. If IP is to be used, 
    for example, it will be set up using PPP's IP Control Protocol (IPCP). Once 
    each of the Network Layer protocols has been configured, datagrams from 
    those protocols can be sent over the link. Control protocols may be used for 
    IP, IPX (NetWare), DDP (AppleTalk), DECnet, and more. 
    <LI>The link will remain configured for communications until LCP and/or NCP 
    packets close the link down. </LI></OL><BR><A name=IP>
  <H4>3.2. The Internet Layer</H4></A>
  <P>The Internet Protocol (<A href="http://www.rfc-editor.org/rfc/rfc791.txt" 
  target=_blank>RFC 791</A>), provides services that are roughly equivalent to 
  the OSI Network Layer. IP provides a datagram (connectionless) transport 
  service across the network. This service is sometimes referred to as 
  <I>unreliable</I> because the network does not guarantee delivery nor notify 
  the end host system about packets lost due to errors or network congestion. IP 
  datagrams contain a message, or one fragment of a message, that may be up to 
  65,535 bytes (octets) in length. IP does not provide a mechanism for flow 
  control. <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE>
                      1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |Version|  IHL  |      TOS      |         Total Length          |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |        Identification         |Flags|    Fragment Offset      |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |      TTL      |   Protocol    |       Header Checksum         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                         Source Address                        |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                       Destination Address                     |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Options....                               (Padding)   |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Data...
 +-+-+-+-+-+-+-+-+-+-+-+-+-
</PRE><B>FIGURE 4. IP packet (datagram) header format.</B> 
  </TR></TBODY></TABLE></CENTER>
  <P>The basic IP packet header format is shown in Figure 4. The format of the 
  diagram is consistent with the RFC; bits are numbered from left-to-right, 
  starting at 0. Each row represents a single <I>32-bit word</I>; note that an 
  IP header will be at least 5 words (20 bytes) in length. The fields contained 
  in the header, and their functions, are: 
  <UL>
    <LI><I>Version:</I> Specifies the IP version of the packet. The current 
    version of IP is version 4, so this field will contain the binary value 
    <FONT face=courier>0100</FONT>. [NOTE: Actually, many IP version numbers 
    have been assigned besides 4 and 6; see the <A 
    href="http://www.iana.org/assignments/version-numbers/version-numbers.xml" 
    target=_blank>IANA's list of IP Version Numbers</A>.] 
    <LI><I>Internet Header Length (IHL):</I> Indicates the length of the 
    datagram header in 32 bit (4 octet) words. A minimum-length header is 20 
    octets, so this field always has a value of at least 5 (<FONT 
    face=courier>0101</FONT>) Since the maximum value of this field is 15, the 
    IP Header can be no longer than 60 octets. 
    <LI><I>Type of Service (TOS):</I> Allows an originating host to request 
    different classes of service for packets it transmits. Although not 
    generally supported today in IPv4, the TOS field can be set by the 
    originating host in response to service requests across the Transport 
    Layer/Internet Layer service interface, and can specify a service priority 
    (0-7) or can request that the route be optimized for either cost, delay, 
    throughput, or reliability. 
    <LI><I>Total Length:</I> Indicates the length (in bytes, or octets) of the 
    entire packet, including both header and data. Given the size of this field, 
    the maximum size of an IP packet is 64&nbsp;KB, or 65,535 bytes. In 
    practice, packet sizes are limited to the maximum transmission unit (MTU). 
    <LI><I>Identification:</I> Used when a packet is fragmented into smaller 
    pieces while traversing the Internet, this identifier is assigned by the 
    transmitting host so that different fragments arriving at the destination 
    can be associated with each other for reassembly. 
    <LI><I>Flags:</I> Also used for fragmentation and reassembly. The first bit 
    is called the More Fragments (MF) bit, and is used to indicate the last 
    fragment of a packet so that the receiver knows that the packet can be 
    reassembled. The second bit is the Don't Fragment (DF) bit, which suppresses 
    fragmentation. The third bit is unused (and always set to 0). 
    <LI><I>Fragment Offset:</I> Indicates the position of this fragment in the 
    original packet. In the first packet of a fragment stream, the offset will 
    be 0; in subsequent fragments, this field will indicates the offset in 
    increments of 8 bytes. 
    <LI><I>Time-to-Live (TTL):</I> A value from 0 to 255, indicating the number 
    of hops that this packet is allowed to take before discarded within the 
    network. Every router that sees this packet will decrement the TTL value by 
    one; if it gets to 0, the packet will be discarded. 
    <LI><I>Protocol:</I> Indicates the higher layer protocol contents of the 
    data carried in the packet; options include ICMP (1), TCP (6), UDP (17), or 
    OSPF (89). A complete list of IP protocol numbers can be found at the <A 
    href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xml" 
    target=_blank>IANA's list of Protocol Numbers</A>. An 
    implementation-specific list of supported protocols can be found in the 
    <FONT face=courier>protocol</FONT> file, generally found in the <FONT 
    face=courier>/etc</FONT> (Linux/Unix), <FONT face=courier>c:\windows</FONT> 
    (Windows 9x, ME), or <FONT face=courier>c:\winnt\system32\drivers\etc</FONT> 
    (Windows NT, 2000, et seq.) directory. 
    <LI><I>Header Checksum:</I> Carries information to ensure that the received 
    IP header is error-free. Remember that IP provides an <I>unreliable</I> 
    service and, therefore, this field only checks the IP header rather than the 
    entire packet. 
    <LI><I>Source Address:</I> IP address of the host sending the packet. 
    <LI><I>Destination Address:</I> IP address of the host intended to receive 
    the packet. 
    <LI><I>Options:</I> A set of options which may be applied to any given 
    packet, such as sender-specified source routing or security indication. The 
    option list may use up to 40 bytes (10 words), and will be padded to a word 
    boundary; IP options are taken from the <A 
    href="http://www.iana.org/assignments/ip-parameters" target=_blank>IANA's 
    list of IP Option Numbers</A>. </LI></UL><A name=IPadd><I>3.2.1. IP 
  Addresses</I></A> 
  <P>IP (version 4) addresses are 32 bits in length (Figure 5). They are 
  typically written as a sequence of four numbers, representing the decimal 
  value of each of the address bytes. Since the values are separated by periods, 
  the notation is referred to as <I>dotted decimal</I>. A sample IP address is 
  208.162.106.17.</P><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE>
                                1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
            0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
           --+-------------+------------------------------------------------
 Class A   |0|     NET_ID  |                         HOST_ID               |
           |-+-+-----------+---------------+-------------------------------| 
 Class B   |1|0|    NET_ID                 |            HOST_ID            |
           |-+-+-+-------------------------+---------------+---------------|
 Class C   |1|1|0|                     NET_ID              |    HOST_ID    |
           |-+-+-+-+---------------------------------------+---------------|
 Class D   |1|1|1|0|                            MULTICAST_ID               |
           |-+-+-+-+-------------------------------------------------------|
 Class E   |1|1|1|1|                      EXPERIMENTAL_ID                  |
           --+-+-+-+--------------------------------------------------------
</PRE><B>FIGURE 5. IP Address Format.</B> 
  </TR></TBODY></TABLE></CENTER><BR><BR>
  <P>IP addresses are hierarchical for routing purposes and are subdivided into 
  two subfields. The Network Identifier (NET_ID) subfield identifies the TCP/IP 
  subnetwork connected to the Internet. The NET_ID is used for high-level 
  routing between networks, much the same way as the country code, city code, or 
  area code is used in the telephone network. The Host Identifier (HOST_ID) 
  subfield indicates the specific host within a subnetwork.</P>
  <P>To accommodate different size networks, IP defines several <I>address 
  classes</I>. Classes A, B, and C are used for host addressing and the only 
  difference between the classes is the length of the NET_ID subfield:</P>
  <UL>
    <LI>A Class A address has an 8-bit NET_ID and 24-bit HOST_ID. Class A 
    addresses are intended for very large networks and can address up to 
    16,777,214 (2<SUP>24</SUP>-2) hosts per network. The first bit of a Class A 
    address is a 0 and the NETID occupies the first byte, so there are only 128 
    (2<SUP>7</SUP>) possible Class A NETIDs. In fact, the first digit of a Class 
    A address will be between 1 and 126, and only about 90 or so Class A 
    addresses have been assigned. 
    <LI>A Class B address has a 16-bit NET_ID and 16-bit HOST_ID. Class B 
    addresses are intended for moderate sized networks and can address up to 
    65,534 (2<SUP>16</SUP>-2) hosts per network. The first two bits of a Class B 
    address are 10 so that the first digit of a Class B address will be a number 
    between 128 and 191; there are 16,384 (2<SUP>14</SUP>) possible Class B 
    NETIDs. The Class B address space has long been threatened with being used 
    up and it is has been very difficult to get a new Class B address for some 
    time. 
    <LI>A Class C address has a 24-bit NET_ID and 8-bit HOST_ID. These addresses 
    are intended for small networks and can address only up to 254 
    (2<SUP>8</SUP>-2) hosts per network. The first three bits of a Class C 
    address are 110 so that the first digit of a Class C address will be a 
    number between 192 and 223. There are 2,097,152 (2<SUP>21</SUP>) possible 
    Class C NETIDs and most addresses assigned to networks today are Class C (or 
    sub-Class C!). </LI></UL>
  <P>The remaining two address classes are used for special functions only and 
  are not commonly assigned to individual hosts. Class D addresses may begin 
  with a value between 224 and 239 (the first 4 bits are 1110), and are used for 
  IP multicasting (i.e., sending a single datagram to multiple hosts); the IANA 
  maintains a list of <A 
  href="http://www.iana.org/assignments/multicast-addresses" 
  target=_blank>Internet Multicast Addresses</A>. Class E addresses begin with a 
  value between 240 and 255 (the first 4 bits are 1111), and are reserved for 
  experimental use.</P>
  <P>Several address values are reserved and/or have special meaning. A HOST_ID 
  of 0 (as used above) is a dummy value reserved as a place holder when 
  referring to an entire subnetwork; the address 208.162.106.0, then, refers to 
  the Class C address with a NET_ID of 208.162.106. A HOST_ID of all ones 
  (usually written "255" when referring to an all-ones byte, but also denoted as 
  "-1") is a broadcast address and refers to all hosts on a network. A NET_ID 
  value of 127 is used for loopback testing and the specific host address 
  127.0.0.1 refers to the <I>localhost</I>.</P>
  <P>Several NET_IDs have been reserved in <A 
  href="http://www.rfc-editor.org/rfc/rfc1918.txt" target=_blank>RFC 1918</A> 
  for private network addresses and packets will not be routed over the Internet 
  to these networks. Reserved NET_IDs are the Class A address 10.0.0.0 (formerly 
  assigned to ARPANET), the sixteen Class B addresses 172.16.0.0-172.31.0.0, and 
  the 256 Class C addresses 192.168.0.0-192.168.255.0. (These addresses are not 
  routable over the Internet because all ISPs have agreed not to route them. 
  They are unusable as public addresses just as the telephone number 555-1234 is 
  unusable on the telephone network because the telephone service providers have 
  "agreed" not to use the 555 exchange.)</P>
  <P>An additional addressing tool is the <I>subnet mask</I>. Subnet masks are 
  used to indicate the portion of the address that identifies the network 
  (and/or subnetwork) for routing purposes. The subnet mask is written in dotted 
  decimal and the number of 1s indicates the significant NET_ID bits. For 
  "classful" IP addresses, the subnet mask and number of significant address 
  bits for the NET_ID are:</P>
  <CENTER>
  <TABLE border=0>
    <TBODY>
    <TR>
      <TH>Class 
      <TH>Subnet Mask 
      <TH>Number of Bits 
    <TR>
      <TD align=center>A 
      <TD align=center>255.0.0.0 
      <TD align=center>8 
    <TR>
      <TD align=center>B 
      <TD align=center>255.255.0.0 
      <TD align=center>16 
    <TR>
      <TD align=center>C 
      <TD align=center>255.255.255.0 
      <TD align=center>24 </TR></TBODY></TABLE></CENTER>
  <P>Depending upon the context and literature, subnet masks may be written in 
  dotted decimal form or just as a number representing the number of significant 
  address bits for the NET_ID. Thus, <FONT face=courier>208.162.106.17 
  255.255.255.0</FONT> and <FONT face=courier>208.162.106.17/24</FONT> both 
  refer to a Class C NET_ID of 208.162.106. Some, in fact, might refer to this 
  24-bit NET_ID as a "slash-24."</P>
  <P>Subnet masks can also be used to subdivide a large address space into 
  subnetworks or to combine multiple small address spaces. In the former case, a 
  network may subdivide their address space to define multiple logical networks 
  by segmenting the HOST_ID subfield into a Subnetwork Identifier (SUBNET_ID) 
  and (smaller) HOST_ID. For example, user assigned the Class B address space 
  172.16.0.0 could segment this into a 16-bit NET_ID, 4-bit SUBNET_ID, and 
  12-bit HOST_ID. In this case, the subnet mask for Internet routing purposes 
  would be 255.255.0.0 (or "/16"), while the mask for routing to individual 
  subnets within the larger Class B address space would be 255.255.240.0 (or 
  "/20").</P>
  <P>But how a subnet mask work? To determine the subnet portion of the address, 
  we simply perform a bit-by-bit logical AND of the IP address and the mask. 
  Consider the following example: suppose we have a host with the IP address 
  172.20.134.164 and a subnet mask 255.255.0.0. We write out the address and 
  mask in decimal and binary as follows:</P><FONT face=courier>
  <BLOCKQUOTE>
    <BLOCKQUOTE>&nbsp; &nbsp; 172.020.134.164 &nbsp; &nbsp; 
      10101100.00010100.10000110.10100100<BR>AND 255.255.000.000 &nbsp; &nbsp; 
      11111111.11111111.00000000.00000000<BR>&nbsp; &nbsp; --------------- 
      &nbsp; &nbsp; -----------------------------------<BR>&nbsp; &nbsp; 
      172.020.000.000 &nbsp; &nbsp; 
    10101100.00010100.00000000.00000000<BR></BLOCKQUOTE></BLOCKQUOTE></FONT>
  <P>From this we can easily find the NET_ID 172.20.0.0 (and can also infer the 
  HOST_ID 134.164).</P>
  <P>As an aside, most ISPs use a /30 address for the WAN links between the 
  network and the customer. The router on the customer's network will generally 
  have two IP addresses; one on the LAN interface using an address from the 
  customer's public IP address space and one on the WAN interface leading back 
  to the ISP. Since the ISP would like to be able to ping both sides of the 
  router for testing and maintenance, having an IP address for each router port 
  is a good idea.</P>
  <P>By using a /30 address, a single Class C address can be broken up into 64 
  smaller addresses. Here's an example. Suppose an ISP assigns a particular 
  customer the address 24.48.165.130 and a subnet mask 255.255.255.252. That 
  would look like the following:</P><FONT face=courier>
  <BLOCKQUOTE>
    <BLOCKQUOTE>&nbsp; &nbsp; 024.048.165.130 &nbsp; &nbsp; 
      00011000.00110000.10100101.10000010<BR>AND 255.255.255.252 &nbsp; &nbsp; 
      11111111.11111111.11111111.11111100<BR>&nbsp; &nbsp; --------------- 
      &nbsp; &nbsp; -----------------------------------<BR>&nbsp; &nbsp; 
      024.048.165.128 &nbsp; &nbsp; 
    00011000.00110000.10100101.10000000<BR></BLOCKQUOTE></BLOCKQUOTE></FONT>
  <P>So we find the NET_ID to be 24.48.165.128. Since there's a 30-bit NET_ID, 
  we are left with a 2-bit HOST_ID; thus, there are four possible host addresses 
  in this subnet: 24.48.165.128 (<FONT face=courier>00</FONT>), .129 (<FONT 
  face=courier>01</FONT>), .130 (<FONT face=courier>10</FONT>), and .131 (<FONT 
  face=courier>11</FONT>). The .128 address isn't used because it is all-zeroes; 
  .131 isn't used because it is all-ones. That leave .129 and .130, which is ok 
  since we only have two ends on the WAN link! So, in this case, the customer's 
  router might be assigned 24.48.165.130/30 and the ISP's end of the link might 
  get 24.48.165.129/30. Use of this subnet mask is very common today (so common 
  that there is a proposal to allow the definition of 2-address NET_IDs 
  specifically for point-to-point WAN links).</P>
  <P>A very good IP addressing tutorial can be found in Chuck Semeria's 
  <I>Understanding IP Addressing: Everything You Ever Wanted to Know</I> (<A 
  href="http://www.garykessler.net/download/tcpip/IPaddressing_A.pdf" 
  target=_blank>Part 1</A> | <A 
  href="http://www.garykessler.net/download/tcpip/IPaddressing_B.pdf" 
  target=_blank>Part 2</A> | <A 
  href="http://www.garykessler.net/download/tcpip/IPaddressing_C.pdf" 
  target=_blank>Part 3</A>). If you are really interested in subnet masks, there 
  are a number of subnet calculators on the Internet, including <A 
  href="http://www.jafar.com/java/jipcalc/index.html" target=_blank>jafar.com's 
  IP Subnet/Supernet Calculator</A> and <A 
  href="http://www.wildpackets.com/resources/free_utilities/ipsubnetcalc" 
  target=_blank>WildPacket's IP Subnet Calculator</A>.</P>
  <BLOCKQUOTE>
    <P>A last and final word about IP addresses is in order. Most Internet 
    protocols specify that addresses be supplied in the form of a 
    fully-qualified host name or an IP address in dotted decimal form. However, 
    spammers and others have found a way to obfuscate IP addresses by supplying 
    the IP address as a single large <B>decimal</B> number. Remember that IP 
    addresses are 32-bit quantities. We write the address in dotted decimal for 
    the convenience of humans; the computer still interprets dotted decimal as a 
    32-bit quantity. Therefore, writing the address as a single large decimal 
    number will still allow the computer to see the address as a 32-bit number. 
    For that reason, the following URLs will all take you to the same Web page 
    (on many browses):</P>
    <UL>
      <LI><A href="http://www.garykessler.net/" 
      target=_blank>http://www.garykessler.net/</A> 
      <LI><A href="http://207.204.17.246/" 
      target=_blank>http://207.204.17.246/</A> 
      <LI><A href="http://207.204.17.246/" 
      target=_blank>http://207.204.17.246/</A> </LI></UL></BLOCKQUOTE><A 
  name=IPcidr><I>3.2.2. Conserving IP Addresses: CIDR, DHCP, NAT, and 
  PAT</I></A> 
  <P>The use of class-based (or <I>classful</I>) addresses in IP is one of the 
  reasons that IP address exhaustion has been a concern since the early 1990s. 
  Consider an organization, for example, that needs 1000 IP addresses. A Class C 
  address is obviously to small so a Class B address would get assigned. But a 
  Class B address offers more than 64,000 address, so over 63,000 addresses are 
  wasted in this assignment. 
  <P>An alternative approach is to assign this organization a block four Class C 
  addresses, such as 192.168.128.0, 192.168.129.0, 192.168.130.0, and 
  192.168.131.0. By using a 22-bit subnet mask 255.255.252.0 (or "/22") for 
  routing to this "block," the NET_ID assigned to this organization is 
  192.168.128.0. 
  <P>This use of variable-size subnet masks is called <I>Classless Interdomain 
  Routing (CIDR)</I>, described in RFCs <A 
  href="http://www.rfc-editor.org/rfc/rfc1518.txt" target=_blank>1518</A> and <A 
  href="http://www.rfc-editor.org/rfc/rfc1519.txt" target=_blank>1519</A>. In 
  the example here, routing information for what is essentially four Class C 
  addresses can be specified in a single router table entry. 
  <P>But this concept can be expanded even more. CIDR is an important 
  contribution to the Internet because it has dramatically limited the size of 
  the Internet backbone's routing tables. Today, IP addresses are not assigned 
  strictly on a first-come, first-serve basis, but have been preallocated to 
  various numbering authorities around the world. The numbering authorities in 
  turn, assign blocks of addresses to major (or first-tier) ISPs; these address 
  blocks are called <I>CIDR blocks</I>. An ISP's customer (which includes ISPs 
  that are customers of a first-tier ISP) will be assigned an IP NET_ID that is 
  part of the ISP's CIDR block. So, for example, let's say that <I>Gary Kessler 
  ISP</I> has a CIDR block containing the 256 Class C addresses in the range 
  196.168.0.0-196.168.255.0. This range of addresses could be represented in a 
  routing table with the single entry 196.168.0.0/16. Once a packet hits the 
  Gary Kessler ISP, it will be routed it to the correct end destination. 
  <P>But don't stop now! By shrinking the size of the subnet mask so that a 
  single NET_ID refers to multiple addresses (resulting in shrinking router 
  tables), we could <I>extend</I> the size of the subnet mask to actually assign 
  to an organization something smaller than a Class C address. As the Class C 
  address space falls in danger of being exhausted, users are under increasing 
  pressure to accept assignment of these <I>sub-Class C addresses</I>. An 
  organization with just a few servers, for example, might be assigned, say, 64 
  addresses rather than the full 256. The standard subnet mask for a Class C is 
  24 bits, yielding a 24-bit NET_ID and 8-bit HOST_ID. If we use a "/26" mask 
  (255.255.255.192), we can assign the same "Class C" to four different users, 
  each getting 1/4 of the address space (and a 6-bit HOST_ID). So, for example, 
  the IP address space 208.162.106.0 might be assigned as follows: 
  <P>
  <CENTER>
  <TABLE border=0>
    <TBODY>
    <TR>
      <TH>NET_ID 
      <TH>HOST_ID<BR>range 
      <TH>Valid<BR>HOST_IDs 
    <TR>
      <TD>208.162.106.0 
      <TD align=center>0-63 
      <TD align=center>1-62 
    <TR>
      <TD>208.162.106.64 
      <TD align=center>64-127 
      <TD align=center>65-126 
    <TR>
      <TD>208.162.106.128 
      <TD align=center>128-191 
      <TD align=center>129-190 
    <TR>
      <TD>208.162.106.192 
      <TD align=center>192-255 
      <TD align=center>193-254 </TR></TBODY></TABLE></CENTER>
  <P>Note that in ordinary Class C usage, we would lose two addresses from the 
  space — 0 and 255 — because addresses of all 0s and all 1s cannot be assigned 
  as a HOST_ID. In the usage above, we would lose eight addresses from this 
  space, because 0, 64, 128, and 192 have an all 0s HOST_ID and 63, 127, 191, 
  and 255 have an all 1s HOST_ID. Each user, then, has 62 addresses that can be 
  assigned to hosts. 
  <P>The pressure on the Class C address space is continuing in intensity. 
  Today, the pressure is not only to limit the number of addresses assigned, but 
  organizations need to show <I>why</I> they need as many addresses as they 
  want. Consider a company with 64 hosts and 3 servers. The ISP may request that 
  that company only obtain 32 IP addresses. The rationale: the 3 servers need 3 
  addresses but the other hosts might be able to "share" the remaining pool of 
  27 addresses (recall that we lost HOST_ID addresses 0 and 31). 
  <P>A pool of IP addresses can be shared by multiple hosts using a mechanism 
  called Network Address Translation (NAT). NAT, described in <A 
  href="http://www.rfc-editor.org/rfc/rfc1631.txt" target=_blank>RFC 1631</A>, 
  is typically implemented in hosts, proxy servers, or routers. The scheme works 
  because every host on the user's network can be assigned an IP address from 
  the pool of RFC 1918 private addresses; since these addresses are never seen 
  on the Internet, this is not a problem. <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><IMG 
        src="Overview%20of%20TCP-IP%20and%20the%20Internet_file/tcpip_nat.gif"><BR><B>FIGURE 
        6. Network Address Translation (NAT).</B> </TR></TBODY></TABLE></CENTER><BR>
  <P>Consider the scenario shown in Figure 6. When the user accesses a Web site 
  on the Internet, the NAT server will translate the "private" IP address of the 
  host (192.168.50.50) into a "public" IP address (220.16.16.5) from the pool of 
  assigned addresses. NAT works because of the assumption that, in this example, 
  no more than 27 of the 64 hosts will ever be accessing the Internet at a 
  single time. 
  <P>But suppose that assumption is wrong. Another enhancement, called Port 
  Address Translation (PAT) or Network Address Port Translation (NAPT), allows 
  multiple hosts to share a single IP address by using different "port numbers" 
  (ports are described more in <A 
  href="http://www.garykessler.net/library/tcpip.html#transport">Section 
  3.3</A>). <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><IMG 
        src="Overview%20of%20TCP-IP%20and%20the%20Internet_file/tcpip_pat.gif" 
        width=700><BR><B>FIGURE 7. Port Address Translation (PAT).</B> 
  </TR></TBODY></TABLE></CENTER><BR>
  <P>Port numbers are used by higher layer protocols (e.g., TCP and UDP) to 
  identify a higher layer application. A TCP connection, for example, is 
  uniquely identified on the Internet by the four values (aka <I>4-tuple</I>) 
  &lt;source IP address, source port, destination IP address, destination 
  port&gt;. The server's port number is defined by the standards while client 
  port numbers can be any number greater than 1023. The scenario in Figure 7 
  shows the following three connections: 
  <UL>
    <LI>The client with the "private" IP address 192.168.50.50 (using port 
    number 12002) connects to a Web server at address 98.10.10.5 (port 80). 
    <LI>The client with the "private" IP address 192.168.50.6 (using port number 
    22986) connects to the same Web server at address 98.10.10.5 (port 80). 
    <LI>The client with the "private" IP address 192.168.50.6 (using port number 
    8931) connects to an FTP server at address 99.12.18.6 (port 21). </LI></UL>
  <P>PAT works in this scenario as follows. The router (running PAT software) 
  can assign both local hosts with the same "public" IP address (220.16.16.5) 
  and differentiate between the three packet flows by the source port. 
  <P>A final note about NAT and PAT. Both of these solutions work and work fine, 
  but they require that <I>every</I> packet be buffered, dissassembled, provided 
  with a new IP address, a new checksum calculated, and the packet reassembled. 
  In addition, PAT requires that a new port number be placed in the higher layer 
  protocol data unit and new checksum calculated at the protocol layer above IP, 
  too. The point is that NAT, and particularly PAT, results in a tremendous 
  performance hit. 
  <P>One advantage of NAT is that it makes IP address renumbering a thing of the 
  past. If a customer has an IP NET_ID assigned from its ISP's CIDR block and 
  then they change ISPs, they will get a new NET_ID. With NAT, only the servers 
  need to be renumbered. 
  <P>Another way to deal with renumbering is to dynamically assign IP addresses 
  to host systems using the Dynamic Host Configuration Protocol (DHCP). DHCP is 
  also an excellent solution for those environments where users move around 
  frequently; it prevents the user from having to reconfigure their system when 
  they move from, say, the Los Angeles office network to the New York office. 
  For an introduction to DHCP, see <A 
  href="http://www.rfc-editor.org/rfc/rfc2131.txt" target=_blank>RFC 2131</A> or 
  <A href="http://www.garykessler.net/library/dhcp.html" target=_blank>"The 
  Dynamic Host Configuration Protocol (DHCP) and Windows NT"</A> by G. Kessler 
  and C. Monaghan. <BR><BR><A name=IPdns><I>3.2.3. The Domain Name 
  System</I></A> 
  <P>While IP addresses are 32 bits in length, most users do not memorize the 
  numeric addresses of the hosts to which they attach; instead, people are more 
  comfortable with host names. Most IP hosts, then, have both a numeric IP 
  address and a name. While this is convenient for people, however, the name 
  must be translated back to a numeric address for routing purposes.</P>
  <P>Earlier discussion in this paper described the domain naming structure of 
  the Internet. In the early ARPANET, every host maintained a file called <FONT 
  face=courier>hosts</FONT> that contained a list of all hosts, which included 
  the IP address, host name, and alias(es). This was an adequate measure while 
  the ARPANET was small and had a slow rate of growth, but was not a scalable 
  solution as the network grew.</P>
  <P>[NOTE: A <FONT face=courier>hosts</FONT> file is still found on Unix 
  systems although usually used to reconcile names of hosts on the local network 
  to cut down on local DNS traffic; the file can usually be found in the <FONT 
  face=courier>/etc</FONT> directory. On Microsoft Windows systems, the <FONT 
  face=courier>HOSTS</FONT> file can typically be found in the <FONT 
  face=courier>c:\windows</FONT> folder; in Windows NT, 2000, and later, it can 
  be found in <FONT face=courier>c:\winnt\system32\drivers\etc</FONT>.]</P>
  <P>To handle the fast rate of new names on the network, the Domain Name System 
  (DNS) was created. The DNS is a distributed database containing host name and 
  IP address information for all domains on the Internet. There is a single 
  <I>authoritative name server</I> for every domain that contains all 
  DNS-related information about the domain; each domain also has at least one 
  secondary name server that also contains a copy of this information. Thirteen 
  <A href="http://www.root-servers.org/" target=_blank><I>root servers</I></A> 
  around the globe maintain a list of all of these authoritative name servers. 
  Although most of the root servers have multiple instances around the globe to 
  improve performance and minimize vulnerability to attack, most of the primary 
  DNS root servers are in the U.S. with the remainder in Asia and Europe).</P>
  <P>When a host on the Internet needs to obtain a host's IP address based upon 
  the host's name, a DNS request is made by the initial host to a local name 
  server. The local name server may be able to respond to the request with 
  information that is either configured or cached at the name server; if 
  necessary information is not available, the local name server forwards the 
  request to one of the root servers. The root server, then, will determine an 
  appropriate name server for the target host and the DNS request will be 
  forwarded to the domain's name server.</P>
  <P>Name server data files contain the following types of records 
including:</P>
  <UL>
    <LI><I>A-record:</I> An address record maps a hostname to an IP address. 
    <LI><I>PTR-record:</I> A pointer record maps an IP address to a hostname. 
    <LI><I>NS-record:</I> A name server record lists the authoritative name 
    server(s) for a given domain. 
    <LI><I>MX-record:</I> A mail exchange record lists the mail servers for a 
    given domain. As an example, consider the author's e-mail address, 
    <I>gck@garykessler.net</I>. Note that the "garykessler.net" portion of the 
    address is a domain name, not a host name, and mail has to be sent to a 
    specific host. The MX-records in the <I>garykessler.net</I> name database 
    specifies the host <I>mx01.register.com</I> is the preferred mail server for 
    this domain. (Register.com hosts the garykessler.net domain.) 
    <LI><I>CNAME-record:</I> Canonical name records provide a mechanism of 
    assigning aliases to host names, so that a single host with a IP address can 
    be known by multiple names. </LI></UL>
  <P>The IANA administers the root zone (i.e., ".") of the DNS. It maintains a 
  list of all authoritative zone administrations at its <A 
  href="http://www.iana.org/domains/root/db/" target=_blank>Root Zone 
  Database</A>.</P>
  <P>More information about the DNS can be found in <A 
  href="http://oreilly.com/catalog/9780596001582" target=_blank><I>DNS and 
  BIND</I></A>, 4th ed. by P. Albitz and C. Liu (O'Reilly &amp; Associates) and 
  <A href="http://www.garykessler.net/library/dns.html" target=_blank>"Setting 
  up Your own DNS"</A> by G. Kessler. The concepts, structure, and delegation of 
  the DNS are described in RFCs <A 
  href="http://www.rfc-editor.org/rfc/rfc1034.txt" target=_blank>1034</A> and <A 
  href="http://www.rfc-editor.org/rfc/rfc1591.txt" target=_blank>1591</A>. In 
  addition, the IANA maintains a list of <A 
  href="http://www.iana.org/assignments/dns-parameters" target=_blank>DNS 
  parameters</A>.</P>
  <P>[ANOTHER NOTE: For Microsoft NetBIOS applications, the moral equivalent to 
  the DNS is the Windows Internet Name Service (WINS), used to reconcile the 
  NetBIOS name of a computer (e.g., <FONT face=courier>\\ALTAMONT</FONT>) to an 
  IP address. A local WINS database can be created in the <FONT 
  face=courier>LMHOSTS</FONT> file.]</P><A name=ARP><I>3.2.4. ARP and Address 
  Resolution</I></A> 
  <P>Early IP implementations ran on hosts commonly interconnected by Ethernet 
  local area networks (LAN). Every transmission on the LAN contains the local 
  network, or medium access control (MAC), address of the source and destination 
  nodes. MAC addresses are 48-bits in length and are non-hierarchical, so 
  routing cannot be performed using the MAC address. MAC addresses are never the 
  same as IP addresses. 
  <P>When a host needs to send a datagram to another host on the same network, 
  the sending application must know both the IP and MAC addresses of the 
  intended receiver; this is because the destination IP address is placed in the 
  IP packet and the destination MAC address is placed in the LAN MAC protocol 
  frame. (If the destination host is on another network, the sender will look 
  instead for the MAC address of the default gateway, or router.) 
  <P>Unfortunately, the sender's IP process may not know the MAC address of the 
  intended receiver on the same network. The Address Resolution Protocol (ARP), 
  described in <A href="http://www.rfc-editor.org/rfc/rfc826.txt" 
  target=_blank>RFC 826</A>, provides a mechanism so that a host can learn a 
  receiver's MAC address when knowing only the IP address. The process is 
  actually relatively simple: the host sends an ARP Request packet in a frame 
  containing the MAC broadcast address; the ARP request advertises the 
  destination IP address and asks for the associated MAC address. The station on 
  the LAN that recognizes its own IP address will send an ARP Response with its 
  own MAC address. As Figure 2 shows, ARP message are carried directly in the 
  LAN frame and ARP is an independent protocol from IP. The IANA maintains a 
  list of all <A href="http://www.iana.org/assignments/arp-parameters" 
  target=_blank>ARP parameters</A>. 
  <P>Other address resolution procedures have also been defined, including: 
  <UL>
    <LI>Reverse ARP (RARP), which allows a disk-less processor to determine its 
    IP address based on knowing its own MAC address 
    <LI>Inverse ARP (InARP), which provides a mapping between an IP address and 
    a frame relay virtual circuit identifier 
    <LI>ATMARP and ATMInARP provide a mapping between an IP address and ATM 
    virtual path/channel identifiers. 
    <LI>LAN Emulation ARP (LEARP), which maps a recipient's ATM address to its 
    LAN Emulation (LE) address (which takes the form of an IEEE 802 MAC 
    address). </LI></UL>
  <P>[NOTE: IP hosts maintain a cache storing recent ARP information. The ARP 
  cache can be viewed from a Unix, Linux, or DOS command line using the <FONT 
  face=courier>arp&nbsp;-a</FONT> command.] <BR><BR><A name=IProute><I>3.2.5. IP 
  Routing: OSPF, RIP, and BGP</I></A> 
  <P>As an OSI Network Layer protocol, IP has the responsibility to route 
  packets. It performs this function by looking up a packet's destination IP 
  NET_ID in a routing table and forwarding based on the information in the 
  table. But it is <I>routing protocols</I>, and <I>not</I> IP, that populate 
  the routing tables with routing information. There are three routing protocols 
  commonly associated with IP and the Internet, namely, RIP, OSPF, and BGP. 
  <P>OSPF and RIP are primarily used to provide routing within a particular 
  domain, such as within a corporate network or within an ISP's network. Since 
  the routing is <I>inside</I> of the domain, these protocols are generically 
  referred to as <I>interior gateways protocols</I>. 
  <P>The Routing Information Protocol version 2 (RIP-2), described in <A 
  href="http://www.rfc-editor.org/rfc/rfc2453.txt" target=_blank>RFC 2453</A>, 
  describes how routers will exchange routing table information using a 
  distance-vector algorithm. With RIP, neighboring routers periodically exchange 
  their entire routing tables. RIP uses hop count as the metric of a path's 
  cost, and a path is limited to 16 hops. Unfortunately, RIP has become 
  increasingly inefficient on the Internet as the network continues its fast 
  rate of growth. Current routing protocols for many of today's LANs are based 
  upon RIP, including those associated with NetWare, AppleTalk, VINES, and 
  DECnet. The IANA maintains a list of <A 
  href="http://www.iana.org/assignments/rip-types" target=_blank>RIP message 
  types</A>. 
  <P>The Open Shortest Path First (OSPF) protocol is a link state routing 
  algorithm that is more robust than RIP, converges faster, requires less 
  network bandwidth, and is better able to scale to larger networks. With OSPF, 
  a router broadcasts only changes in its links' status rather than entire 
  routing tables, making it more robust and scalable than RIP. OSPF Version 2 is 
  described in <A href="http://www.rfc-editor.org/rfc/rfc1583.ps" 
  target=_blank>RFC 1583</A>. 
  <P>The Border Gateway Protocol version 4 (BGP-4) is an <I>exterior gateway 
  protocol</I> because it is used to provide routing information between 
  Internet routing domains. BGP is a distance vector protocol, like RIP, but 
  unlike almost all other distance vector protocols, BGP tables store the actual 
  route to the destination network. BGP-4 also supports policy-based routing, 
  which allows a network's administrator to create routing policies based on 
  political, security, legal, or economic issues rather than technical ones. 
  BGP-4 also supports CIDR. BGP-4 is described in <A 
  href="http://www.rfc-editor.org/rfc/rfc1771.txt" target=_blank>RFC 1771</A>, 
  while <A href="http://www.rfc-editor.org/rfc/rfc1268.txt" target=_blank>RFC 
  1268</A> describes use of BGP in the Internet. In addition, the IANA maintains 
  a list of <A href="http://www.iana.org/assignments/bgp-parameters" 
  target=_blank>BGP parameters</A>. 
  <P>As an alternative to using a routing protocol, the routing table can be 
  maintained using "static routing." One example of static routing is the 
  configuration of a default gateway at a host system; if the host needs to send 
  an IP packet off of the local LAN segment, it is just blindly forwarded to the 
  default gateway (router). Edge router's, too, commonly use static routing; the 
  single router connecting a site to an ISP, for example, will usually just have 
  a static routing table entry indicating that all traffic leaving the local LAN 
  be forwarded to the ISP's access router. Since there's only a single path into 
  the ISP, a routing protocol is hardly necessary. 
  <P>All IP hosts and routers maintain a table that lists the most up-to-date 
  routing information that that device knows. On a Windows system, you can 
  examine the routing table by issuing a <FONT face=courier>route print</FONT> 
  command; on Unix systems, use <FONT face=courier>netstat -r</FONT>. 
  <P>Figure 2 shows the protocol relationship of RIP, OSPF, and BGP to IP. A RIP 
  message is carried in a UDP datagram which, in turn, is carried in an IP 
  packet. An OSPF message, on the other hand, is carried directly in an IP 
  datagram. BGP messages, in a total departure, are carried in TCP segments over 
  IP. Although all of the TCP/IP books mentioned above discuss IP routing to 
  some level of detail, <I>Routing in the Internet</I> by Christian Huitema is 
  one of the best available references on this specific subject. <BR><BR><A 
  name=IPv6><I>3.2.6. IP version 6</I></A> 
  <P>The official version of IP that has been in use since the early 1980s is 
  <I>version 4</I>. Due to the tremendous growth of the Internet and new 
  emerging applications, it was recognized that a new version of IP was becoming 
  necessary. In late 1995, IP version 6 (IPv6) was entered into the Internet 
  Standards Track. The primary description of IPv6 is contained in <A 
  href="http://www.rfc-editor.org/rfc/rfc1883.txt" target=_blank>RFC 1883</A> 
  and a number of related specifications, including ICMPv6. 
  <P>IPv6 is designed as an evolution from IPv4, rather than a radical change. 
  Primary areas of change relate to: 
  <UL>
    <LI>Increasing the IP address size to 128 bits 
    <LI>Better support for traffic types with different quality-of-service 
    objectives 
    <LI>Extensions to support authentication, data integrity, and data 
    confidentiality </LI></UL>
  <P>The architecture and structure of IPv6 addresses is described in <A 
  href="http://www.rfc-editor.org/rfc/rfc2373.txt" target=_blank>RFC 2373</A>. 
  In July 1999, the IANA delegated the initial IPv6 address space to the 
  worldwide regional registries in order to begin immediate worldwide deployment 
  of IPv6 addresses. More information can be found at <A 
  href="http://www.apnic.net/" target=_blank>APNIC</A>, <A 
  href="http://www.arin.net/" target=_blank>ARIN</A>, and <A 
  href="http://www.ripe.net/" target=_blank>RIPE</A>. 
  <P>For more information about IPv6, check out: 
  <UL>
    <LI><I>IPng: Internet Protocol Next Generation</I> by Scott Bradner and 
    Allison Mankin (Addison-Wesley, 1996) 
    <LI><I>IPv6: The New Internet Protocol</I> by Christian Huitema 
    (Prentice-Hall, 1996). 
    <LI><A href="http://www.garykessler.net/library/ipv6_exp.html" 
    target=_blank>"IPv6: The Next Generation Internet Protocol"</A> by Gary 
    Kessler. 
    <LI><I>IPng and the TCP/IP Protocols</I> by Stephen Thomas (John Wiley &amp; 
    Sons, 1996) 
    <LI><A href="http://www.ietf.org/html.charters/ipngwg-charter.html" 
    target=_blank>IPng Working Group page (IETF)</A> 
    <LI><A href="http://playground.sun.com/pub/ipng/html" target=_blank>IP Next 
    Generation Web Page (Sun)</A> 
    <LI><A href="http://go6.net/ipv6-6bone/" target=_blank>6bone Testbed</A> 
    </LI></UL><BR><A name=transport>
  <H4>3.3. The Transport Layer Protocols</H4></A>
  <P>The TCP/IP protocol suite comprises two protocols that correspond roughly 
  to the OSI Transport and Session Layers; these protocols are called the 
  Transmission Control Protocol and the User Datagram Protocol (UDP). One can 
  argue that it is a misnomer to refer to "TCP/IP applications," as most such 
  applications actually run over TCP or UDP, as shown in Figure 2. <BR><BR><A 
  name=ports><I>3.3.1. Ports</I></A> 
  <P>Higher-layer applications are referred to by a port identifier in TCP/UDP 
  messages. The port identifier and IP address together form a <I>socket</I>, 
  and the end-to-end communication between two hosts is uniquely identified on 
  the Internet by the four-tuple (source port, source address, destination port, 
  destination address). 
  <P>Port numbers are specified by a 16-bit number. Port numbers in the range 
  0-1023 are called <I>Well Known Ports</I>. These port numbers are assigned to 
  the server side of an application and, on most systems, can only be used by 
  processes with a high level of privilege (such as root or administrator). Port 
  numbers in the range 1024-49151 are called <I>Registered Ports</I>, and these 
  are numbers that have been publicly defined as a convenience for the Internet 
  community to avoid vendor conflicts. Server or client applications can use the 
  port numbers in this range. The remaining port numbers, in the range 
  49152-65535, are called <I>Dynamic and/or Private Ports</I> and can be used 
  freely by any client or server. 
  <P>Some well-known port numbers include: </P>
  <CENTER>
  <TABLE border=0>
    <TBODY>
    <TR>
      <TH width=60>Port # 
      <TH width=80>Common<BR>Protocol 
      <TH width=80>Service 
      <TH width=25>&nbsp; 
      <TH width=60>Port # 
      <TH width=80>Common<BR>Protocol 
      <TH width=80>Service 
    <TR>
      <TD align=center>7 
      <TD align=center>TCP 
      <TD align=center>echo 
      <TD>&nbsp; 
      <TD align=center>80 
      <TD align=center>TCP 
      <TD align=center>http 
    <TR>
      <TD align=center>9 
      <TD align=center>TCP 
      <TD align=center>discard 
      <TD>&nbsp; 
      <TD align=center>110 
      <TD align=center>TCP 
      <TD align=center>pop3 
    <TR>
      <TD align=center>13 
      <TD align=center>TCP 
      <TD align=center>daytime 
      <TD>&nbsp; 
      <TD align=center>111 
      <TD align=center>TCP 
      <TD align=center>sunrpc 
    <TR>
      <TD align=center>19 
      <TD align=center>TCP 
      <TD align=center>chargen 
      <TD>&nbsp; 
      <TD align=center>119 
      <TD align=center>TCP 
      <TD align=center>nntp 
    <TR>
      <TD align=center>20 
      <TD align=center>TCP 
      <TD align=center>ftp-control 
      <TD>&nbsp; 
      <TD align=center>123 
      <TD align=center>UDP 
      <TD align=center>ntp 
    <TR>
      <TD align=center>21 
      <TD align=center>TCP 
      <TD align=center>ftp-data 
      <TD>&nbsp; 
      <TD align=center>137 
      <TD align=center>UDP 
      <TD align=center>netbios-ns 
    <TR>
      <TD align=center>23 
      <TD align=center>TCP 
      <TD align=center>telnet 
      <TD>&nbsp; 
      <TD align=center>138 
      <TD align=center>UDP 
      <TD align=center>netbios-dgm 
    <TR>
      <TD align=center>25 
      <TD align=center>TCP 
      <TD align=center>smtp 
      <TD>&nbsp; 
      <TD align=center>139 
      <TD align=center>TCP 
      <TD align=center>netbios-ssn 
    <TR>
      <TD align=center>37 
      <TD align=center>UDP 
      <TD align=center>time 
      <TD>&nbsp; 
      <TD align=center>143 
      <TD align=center>TCP 
      <TD align=center>imap 
    <TR>
      <TD align=center>43 
      <TD align=center>TCP 
      <TD align=center>whois 
      <TD>&nbsp; 
      <TD align=center>161 
      <TD align=center>UDP 
      <TD align=center>snmp 
    <TR>
      <TD align=center>53 
      <TD align=center>TCP/UDP 
      <TD align=center>dns 
      <TD>&nbsp; 
      <TD align=center>162 
      <TD align=center>UDP 
      <TD align=center>snmp-trap 
    <TR>
      <TD align=center>67 
      <TD align=center>UDP 
      <TD align=center>bootps 
      <TD>&nbsp; 
      <TD align=center>179 
      <TD align=center>TCP 
      <TD align=center>bgp 
    <TR>
      <TD align=center>68 
      <TD align=center>UDP 
      <TD align=center>bootpc 
      <TD>&nbsp; 
      <TD align=center>443 
      <TD align=center>TCP 
      <TD align=center>https (http/ssl) 
    <TR>
      <TD align=center>69 
      <TD align=center>UDP 
      <TD align=center>tftp 
      <TD>&nbsp; 
      <TD align=center>520 
      <TD align=center>UDP 
      <TD align=center>rip 
    <TR>
      <TD align=center>70 
      <TD align=center>TCP 
      <TD align=center>gopher 
      <TD>&nbsp; 
      <TD align=center>1080 
      <TD align=center>TCP 
      <TD align=center>socks 
    <TR>
      <TD align=center>79 
      <TD align=center>TCP 
      <TD align=center>finger 
      <TD>&nbsp; 
      <TD align=center>33434 
      <TD align=center>UDP 
      <TD align=center>traceroute 
      <TD>&nbsp; </TR></TBODY></TABLE></CENTER>
  <P>A complete list of port numbers that have been assigned can be found in the 
  <A href="http://www.iana.org/assignments/port-numbers" target=_blank>IANA's 
  list of Port Numbers</A>. An implementation-specific list of supported port 
  numbers and services can be found in the <FONT face=courier>services</FONT> 
  file, generally found in the <FONT face=courier>/etc</FONT> (Linux/Unix), 
  <FONT face=courier>c:\windows</FONT> (Windows 9x, ME), or <FONT 
  face=courier>c:\$systemroot\system32\drivers\etc</FONT> (Windows NT, 2000, et 
  seq.) directory. <BR><BR><A name=TCP><I>3.3.2. TCP</I></A> 
  <P>TCP, described in <A href="http://www.rfc-editor.org/rfc/rfc793.txt" 
  target=_blank>RFC 793</A>, provides a virtual circuit (connection-oriented) 
  communication service across the network. TCP includes rules for formatting 
  messages, establishing and terminating virtual circuits, sequencing, flow 
  control, and error correction. Most of the applications in the TCP/IP suite 
  operate over the <I>reliable</I> transport service provided by TCP. <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE>
                      1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |         Source Port           |      Destination Port         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                       Sequence Number                         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |                    Acknowledgement Number                     |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |Offset |(reserved) |   Flags   |          Window               |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |        Checksum               |      Urgent Pointer           |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Options....                               (Padding)   |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Data...
 +-+-+-+-+-+-+-+-+-+-+-+-+-
</PRE><B>FIGURE 8. TCP segment format.</B> </TR></TBODY></TABLE></CENTER>
  <P>The TCP data unit is called a <I>segment</I>; the name is due to the fact 
  that TCP does not recognize messages, per se, but merely sends a block of 
  bytes from the byte stream between sender and receiver. The fields of the 
  segment (Figure 8) are: 
  <UL>
    <LI><I>Source Port</I> and <I>Destination Port:</I> Identify the source and 
    destination ports to identify the end-to-end connection and higher-layer 
    application. 
    <LI><I>Sequence Number:</I> Contains the sequence number of this segment's 
    first data byte in the overall connection byte stream; since the sequence 
    number refers to a byte count rather than a segment count, sequence numbers 
    in contiguous TCP segments are not numbered sequentially. 
    <LI><I>Acknowledgment Number:</I> Used by the sender to acknowledge receipt 
    of data; this field indicates the sequence number of the next byte expected 
    from the receiver. 
    <LI><I>Data Offset:</I> Points to the first data byte in this segment; this 
    field, then, indicates the segment header length. 
    <LI><I>Control Flags:</I> A set of flags that control certain aspects of the 
    TCP virtual connection. The flags include: 
    <UL>
      <LI><I>Urgent Pointer Field Significant (URG):</I> When set, indicates 
      that the current segment contains urgent (or high-priority) data and that 
      the Urgent Pointer field value is valid. 
      <LI><I>Acknowledgment Field Significant (ACK):</I> When set, indicates 
      that the value contained in the Acknowledgment Number field is valid. This 
      bit is usually set, except during the first message during connection 
      establishment. 
      <LI><I>Push Function (PSH):</I> Used when the transmitting application 
      wants to force TCP to immediately transmit the data that is currently 
      buffered without waiting for the buffer to fill; useful for transmitting 
      small units of data. 
      <LI><I>Reset Connection (RST):</I> When set, immediately terminates the 
      end-to-end TCP connection. 
      <LI><I>Synchronize Sequence Numbers (SYN):</I> Set in the initial segments 
      used to establish a connection, indicating that the segments carry the 
      initial sequence number. 
      <LI><I>Finish (FIN):</I> Set to request normal termination of the TCP 
      connection in the direction this segment is traveling; completely closing 
      the connection requires one FIN segment in each direction. </LI></UL>
    <LI><I>Window:</I> Used for flow control, contains the value of the 
    <I>receive window size</I> which is the number of transmitted bytes that the 
    sender of this segment is willing to accept from the receiver. 
    <LI><I>Checksum:</I> Provides bit error detection for the TCP segment. The 
    checksum field covers the TCP segment header and data, as well as a 96-bit 
    <I>pseudo header</I> that contains the IP header Source Address, Destination 
    Address, and Protocol fields, as well as the TCP segment length. 
    <LI><I>Urgent Pointer</I>: Urgent data is information that has been marked 
    as high-priority by a higher layer application; this data, in turn, usually 
    bypasses normal TCP buffering and is placed in a segment between the header 
    and "normal" data. The Urgent Pointer, valid when the URG flag is set, 
    indicates the position of the first octet of nonexpedited data in the 
    segment. 
    <LI><I>Options:</I> Used at connection establishment to negotiate a variety 
    of options; maximum segment size (MSS) is the most commonly used option and, 
    if absent, defaults to an MSS of 536. Another option is Selective 
    Acknowledgement (SACK), which allows out-of-sequence segments to be accepted 
    by a receiver. The IANA maintains a list of all <A 
    href="http://www.iana.org/assignments/tcp-parameters" target=_blank>TCP 
    Option Numbers</A>. </LI></UL><BR><A name=UDP><I>3.3.3. UDP</I></A> 
  <P>UDP, described in <A href="http://www.rfc-editor.org/rfc/rfc768.txt" 
  target=_blank>RFC 768</A>, provides an end-to-end datagram (connectionless) 
  service. Some applications, such as those that involve a simple query and 
  response, are better suited to the datagram service of UDP because there is no 
  time lost to virtual circuit establishment and termination. UDP's primary 
  function is to add a port number to the IP address to provide a socket for the 
  application. <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE>
                      1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1

 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
 |         Source Port           |      Destination Port         |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |           Length              |          Checksum             |
 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
 |         Data...
 +-+-+-+-+-+-+-+-+-+-+-+-+-
</PRE><B>FIGURE 9. UDP datagram format.</B> </TR></TBODY></TABLE></CENTER>
  <P>The fields of a UDP datagram (Figure 9) are: 
  <UL>
    <LI><I>Source Port:</I> Identifies the UDP port being used by the sender of 
    the datagram; use of this field is optional in UDP and may be set to 0. 
    <LI><I>Destination Port:</I> Identifies the port used by the datagram 
    receiver. 
    <LI><I>Length:</I> Indicates the total length of the UDP datagram. 
    <LI><I>Checksum:</I> Provides bit error detection for the UDP datagram. The 
    checksum field covers the UDP datagram header and data, as well as a 96-bit 
    <I>pseudo header</I> that contains the IP header Source Address, Destination 
    Address, and Protocol fields, as well as the UDP datagram length. 
  </LI></UL><BR><A name=ICMP><I>3.3.4. ICMP</I></A> 
  <P>The Internet Control Message Protocol, described in <A 
  href="http://www.rfc-editor.org/rfc/rfc792.txt" target=_blank>RFC 792</A>, is 
  an adjunct to IP that notifies the sender of IP datagrams about abnormal 
  events. This collateral protocol is particularly important in the 
  connectionless environment of IP. ICMP is not a classic host-to-host protocols 
  like TCP or UDP, but is host-to-host in the sense that one device (e.g., a 
  router or computer) is sending a message to another device (e.g., another 
  router or computer). 
  <P>The commonly employed ICMP message types include: 
  <UL>
    <LI><I>Destination Unreachable:</I> Indicates that a packet cannot be 
    delivered because the destination host cannot be reached. The reason for the 
    non-delivery may be that the host or network is unreachable or unknown, the 
    protocol or port is unknown or unusable, fragmentation is required but not 
    allowed (DF-flag is set), or the network or host is unreachable for this 
    type of service. 
    <LI><I>Echo</I> and <I>Echo Reply:</I> These two messages are used to check 
    whether hosts are reachable on the network. One host sends an Echo message 
    to the other, optionally containing some data, and the receiving host 
    responds with an Echo Reply containing the same data. These messages are the 
    basis for the Ping command. 
    <LI><I>Parameter Problem:</I> Indicates that a router or host encountered a 
    problem with some aspect of the packet's Header. 
    <LI><I>Redirect:</I> Used by a host or router to let the sending host know 
    that packets should be forwarded to another address. <I>For security 
    reasons, Redirect messages should usually be blocked at the firewall.</I> 
    <LI><I>Source Quench:</I> Sent by a router to indicate that it is 
    experiencing congestion (usually due to limited buffer space) and is 
    discarding datagrams. 
    <LI><I>TTL Exceeded:</I> Indicates that a datagram has been discarded 
    because the TTL field reached 0 or because the entire packet was not 
    received before the fragmentation timer expired. 
    <LI><I>Timestamp</I> and <I>Timestamp Reply:</I> These messages are similar 
    to the Echo messages, but place a timestamp (with millisecond granularity) 
    in the message, yielding a measure of how long remote systems spend 
    buffering and processing datagrams, and providing a mechanism so that hosts 
    can synchronize their clocks. </LI></UL>
  <P>ICMP messages are carried in IP packets. The IANA maintains a complete list 
  of <A href="http://www.iana.org/assignments/icmp-parameters" 
  target=_blank>ICMP parameters</A>. <BR><BR><A name=connect><I>3.3.5. TCP 
  Logical Connections and ICMP</I></A> 
  <P>It is imperative to understand how a TCP connection is established to get a 
  good feel for how TCP operates. TCP connections have three main parts: 
  connection establishment, data exchange, and connection termination. The 
  example below shows a POP3 server (listening on TCP port 110) being contacted 
  by a client (using TCP port 1967).</P><BR>
  <CENTER>
  <TABLE border=3 cellPadding=15>
    <TBODY>
    <TR>
      <TD><PRE><B>
CLIENT                                           SERVER</B>

syn, SEQ=800                                             <B>1</B>
---------------------------------------------------&gt;     <B>1</B>
src_port=1967, dst_port=110                              <B>1</B>
                                                         <B>1</B>
                         syn, ack, SEQ=1567, ACK=801     <B>1 CONNECTION</B>
&lt;---------------------------------------------------     <B>1</B>
                         src_port=110, dst_port=1967     <B>1 ESTABLISHMENT</B>
                                                         <B>1</B>
ack, SEQ=801, ACK=1568                                   <B>1</B>
---------------------------------------------------&gt;     <B>1</B>
src_port=1967, dst_port=110                              <B>1</B>


                              ack, SEQ=1568, ACK=801     <B>2</B>
&lt;---------------------------------------------------     <B>2</B>
                         src_port=110, dst_port=1967     <B>2</B>
                    DataLen=18 (POP3 Server V1.12\n)     <B>2</B>
                                                         <B>2</B>
ack, SEQ=801, ACK=1586                                   <B>2</B>
---------------------------------------------------&gt;     <B>2</B>
src_port=1967, dst_port=110                              <B>2</B>
DataLen=5 (quit\n)                                       <B>2 DATA</B>
                                                         <B>2 EXCHANGE</B>
                              ack, SEQ=1586, ACK=806     <B>2</B>
&lt;---------------------------------------------------     <B>2</B>
                         src_port=110, dst_port=1967     <B>2</B>
                              DataLen=9 (Sayonara\n)     <B>2</B>
                                                         <B>2</B>
ack, SEQ=806, ACK=1595                                   <B>2</B>
---------------------------------------------------&gt;     <B>2</B>
src_port=1967, dst_port=110                              <B>2</B>


fin, ack, SEQ=806, ACK=1595                              <B>3</B>
---------------------------------------------------&gt;     <B>3</B>
src_port=1967, dst_port=110                              <B>3</B>
                                                         <B>3</B>
                              ack, SEQ=1595, ACK=807     <B>3</B>
&lt;---------------------------------------------------     <B>3</B>
                         src_port=110, dst_port=1967     <B>3 CONNECTION</B>
                                                         <B>3</B>
                         fin, ack, SEQ=1595, ACK=807     <B>3 TERMINATION</B>
&lt;---------------------------------------------------     <B>3</B>
                         src_port=110, dst_port=1967     <B>3</B>
                                                         <B>3</B>
ack, SEQ=807, ACK=1596                                   <B>3</B>
---------------------------------------------------&gt;     <B>3</B>
src_port=1967, dst_port=110                              <B>3</B>
</PRE><B>FIGURE 10. TCP logical connection phases.</B> 
  </TR></TBODY></TABLE></CENTER><BR><BR>
  <P>The <I>connection establishment</I> phase comprises a three-way handshake 
  during which time the client and server exchange their initial sequence number 
  (ISN) and acknowledge the other host's ISN. In this example, the client starts 
  by sending the server a TCP segment with the syn-bit set and a Sequence Number 
  of 800. The syn-bit tells the receiver (i.e., the server) that the sender 
  (i.e., the client) is in "ISN initialization" mode and that the ISN hasn't yet 
  been confirmed. The segment's Acknowledgement Number isn't shown because its 
  value is, at this point, invalid.</P>
  <P>The server responds with a segment with the syn- and ack-bits set, a 
  Sequence Number of 1567, and an Acknowledgement Number of 801. The syn-bit and 
  ISN of 1567 have the same meaning as above. The ack-bit indicates the value of 
  the Acknowledgement Number field is valid and the ACK value of 801 is the way 
  in which the server confirms the client's ISN.</P>
  <P>The final part of the three-way handshake is when the client sends a 
  segment with just the ack-bit set. Note that the Acknowledgement Number field 
  (1568) is one greater than the server's ISN.</P>
  <P>This three-way handshake is sometimes referred to as an exchange of "syn, 
  syn/ack, and ack" segments. It is important for a number of reasons. For 
  individuals looking at packet traces, recognition of the three-way handshake 
  is how to find the start of a connection. For firewalls, proxy severs, 
  intrusion detectors, and other systems, it provides a way of knowing the 
  direction of a TCP connection setup since rules may differ for outbound and 
  inbound connections.</P>
  <P>The second part of the TCP connection is <I>data exchange</I>. The 
  information here is more or less made up for example purposes only; it shows a 
  POP server sending a banner message to the client system, the user sending the 
  "quit" command, and the server signing off. (Note that the "\n" indicates an 
  "end-of-line" indicator.) These segments show the changing of, and 
  relationship between, the client's and server's sequence and acknowledgement 
  numbers.</P>
  <P>The final phase is <I>connection termination</I>. Although TCP connections 
  are full-duplex (even if a given application does not allow two-way 
  simultaneous communication), the TCP protocol views the logical connection as 
  a pair of simplex links. Therefore, connection termination requires four 
  segments or, more properly, two pair of segments. In this case, the client 
  sends the server a segment with the fin- and ack-bits set; the server responds 
  with a segment with just the ack-bit set and the Acknowledgment Number is 
  incremented. The server then sends a fin/ack segment to the client.</P>
  <P>The paragraphs above describe a normal scenario setting up a TCP connection 
  between a client and server. Two UDP hosts communicate in a similar fashion; 
  one host sends a UDP datagram to the other which is presumably listening on 
  the port indicated in the datagram.</P>
  <P>But what happens if a host isn't listening on a port to which a connection 
  is attempted or the host doesn't actually exist? Here's what happens in these 
  "abnormal" conditions:</P>
  <UL>
    <LI><I>Host not listening on TCP port:</I> If Host A attempts to contact 
    Host B on a TCP port that Host B is not listening on, Host B responds with a 
    TCP segment with the reset (RST) and acknowledge (ACK) flags set. 
    <LI><I>Host not listening on UDP port:</I> If Host A attempts to contact 
    Host B on a UDP port that Host B is not listening on, Host B sends an ICMP 
    <I>port unreachable</I> message to Host A. 
    <LI><I>Host does not exist:</I> If Host A attempts to contact Host B and 
    Host B is not listening (e.g., Host B's IP address either doesn't exist or 
    is unavailable), Host B's subnet's router will send an ICMP <I>host 
    unreachable</I> message to Host A. </LI></UL><BR><A name=applayer>
  <H4>3.4. The TCP/IP Application Layer</H4></A>
  <P>The TCP/IP Application Layer protocols support the applications and 
  utilities that <B>are</B> the Internet. This section will list a number of 
  these applications and show a sample packet decode of all protocol layers. 
  <BR><BR><A name=apps><I>3.4.1. TCP and UDP Applications</I></A> 
  <P>Commonly used protocols (as shown in Figure 2) include: 
  <UL>
    <LI><I>Archie:</I> A utility that allows a user to search all registered 
    anonymous FTP sites for files on a specified topic. Obsolete by the 
    late-1990s, obviated by the World Wide Web. 
    <LI><I>BGP:</I> The Border Gateway Protocol version 4 (BGP-4) is a distance 
    vector exterior gateway routing protocol, commonly used between two ISPs or 
    between a customer site and ISP if there are multiple links. (Discussed in 
    <A ?href="#IProute">Section 3.2.5</A> above.) 
    <LI><I>DNS:</I> The Domain Name System (described in slightly more detail in 
    <A ?href="#IPdns">Section 3.2.3</A> above) defines the structure of Internet 
    names and their association with IP addresses, as well as the association of 
    mail and name servers with domains. 
    <LI><I>Finger:</I> Used to determine the status of other hosts and/or users 
    (<A href="http://www.rfc-editor.org/rfc/rfc1288.txt" target=_blank>RFC 
    1288</A>). 
    <LI><I>FTP:</I> The File Transfer Protocol allows a user to transfer files 
    between local and remote host computers (<A 
    href="http://www.rfc-editor.org/rfc/rfc959.txt" target=_blank>RFC 959</A>). 
    <LI><I>Gopher:</I> A tool that allows users to search through data 
    repositories using a menu-driven, hierarchical interface, with links to 
    other sites. Obsolete today, obviated by the World Wide Web (<A 
    href="http://www.rfc-editor.org/rfc/rfc1436.txt" target=_blank>RFC 
    1436</A>). 
    <LI><I>HTTP:</I> The Hypertext Transfer Protocol is the basis for exchange 
    of information over the World Wide Web (WWW). Various versions of HTTP are 
    in use over the Internet, with HTTP version 1.1 (<A 
    href="http://www.rfc-editor.org/rfc/rfc2616.txt" target=_blank>RFC 2616</A>) 
    being the most current. WWW pages are written in the Hypertext Markup 
    Language (HTML), an ASCII-based, platform-independent formatting language 
    (<A href="http://www.rfc-editor.org/rfc/rfc1866.txt" target=_blank>RFC 
    1866</A>). 
    <LI><I>IMAP:</I> The Internet Mail Access Protocol defines an alternative to 
    POP as the interface between a user's mail client software and an e-mail 
    server, used to download mail from the server to the client and providing 
    significant flexibility in mailbox management. 
    <LI><I>OSPF:</I> The Open Shortest Path First version 2 (OSPFv2) protocol is 
    a link state routing protocol used within an organization's network. This is 
    the preferred so-called <I>interior gateway protocol</I>. (Discussed in <A 
    ?href="#IProute">Section 3.2.5</A> above.) 
    <LI><I>Ping:</I> A utility that allows a user at one system to determine the 
    status of other hosts and the latency in getting a message to that host. 
    Uses ICMP Echo messages. For more information and insight, see <A 
    href="http://www.ping127001.com/pingpage.htm" target=_blank>The Ping 
    Page</A>. 
    <LI><I>POP:</I> The Post Office Protocol defines a simple interface between 
    a user's mail client software (e.g., Eudora, Outlook, or the e-mail 
    capability of your browser) and an e-mail server, used to download mail from 
    the server to the client and allows the user to manage their mailboxes. The 
    current version is POP3 (<A href="http://www.rfc-editor.org/rfc/rfc1460.txt" 
    target=_blank>RFC 1460</A>). 
    <LI><I>RADIUS:</I> The Remote Authentication Dial-In User Service (RADIUS) 
    is a remote-access protocol. 
    <LI><I>RIP:</I> The Routing Information Protocol (RIP) is a distance-vector 
    routing protocol used within an organization's network. (Discussed in <A 
    ?href="#IProute">Section 3.2.5</A> above.) 
    <LI><I>SSH:</I> The Secure Shell is a protocol that allows remote logon to a 
    host across the Internet, much like Telnet. Unlike Telnet, however, SSH 
    encrypts passwords and data traffic. 
    <LI><I>SMTP:</I> The Simple Mail Transfer Protocol is the standard protocol 
    for the exchange of electronic mail over the Internet (<A 
    href="http://www.rfc-editor.org/rfc/rfc821.txt" target=_blank>RFC 821</A>). 
    SMTP is used between e-mail servers on the Internet or to allow an e-mail 
    client to send mail to a server. <A 
    href="http://www.rfc-editor.org/rfc/rfc822.txt" target=_blank>RFC 822</A> 
    specifically describes the mail message body format, and RFCs <A 
    href="http://www.rfc-editor.org/rfc/rfc1521.txt" target=_blank>1521</A> and 
    <A href="http://www.rfc-editor.org/rfc/rfc1522.txt" target=_blank>1522</A> 
    describe MIME (Multipurpose Internet Mail Extensions). Reference books on 
    electronic mail systems include <I>!%@:: Addressing and Networks</I> by D. 
    Frey and R. Adams (O'Reilly &amp; Associates, 1993) and <I>THE INTERNET 
    MESSAGE: Closing the Book With Electronic Mail</I> by M. Rose (PTR Prentice 
    Hall, 1993). 
    <LI><I>SNMP:</I> The Simple Network Management Protocol defines procedures 
    and management information databases for managing TCP/IP-based network 
    devices. SNMP (<A href="http://www.rfc-editor.org/rfc/rfc1157.txt" 
    target=_blank>RFC 1157</A>) is widely deployed in local and wide area 
    networks. SNMP Version 2 (SNMPv2, <A 
    href="http://www.rfc-editor.org/rfc/rfc1441.txt" target=_blank>RFC 1441</A>) 
    adds security mechanisms that are missing in SNMP, but is also very complex; 
    widespread use of SNMPv2 has yet to be seen. Additional information on SNMP 
    and TCP/IP-based network management can be found in <I>SNMP</I> by S. Feit 
    (McGraw-Hill, 1994) and <I>THE SIMPLE BOOK: An Introduction to Internet 
    Management</I>, 2/e, by M. Rose (PTR Prentice Hall, 1994). 
    <LI><I>SSL:</I> The Secure Sockets Layer (SSL), designed by Netscape, 
    provides a mechanism for secure communications over the Internet, based on 
    certificates and public key cryptography. The most commonly known SSL 
    application is HTTP over SSL, commonly designated as <I>https</I>. The 
    newest version of SSL is called Transport Layer Security (TLS) (<A 
    href="http://www.rfc-editor.org/rfc/rfc2246.txt" target=_blank>RFC 
    2246</A>). SSL is <I>not</I>, however, HTTP-specific; protocols such as 
    IMAP4 (imaps), FTP (ftps), Telnet (telnets), and POP3 (pop3s) all have 
    definitions for operation over SSL. (Additional details on the operation of 
    SSL/TLS can be found in the <A 
    href="http://www.garykessler.net/library/crypto.html#ssl" target=_blank>SSL 
    section</A> of the author's cryptography overview paper.) 
    <LI><I>TACACS+:</I> The Terminal Access Controller Access Control System 
    plus is a remote access protocol. 
    <LI><I>Telnet:</I> Short for <I>Telecommunication Network</I>, a virtual 
    terminal protocol allowing a user logged on to one TCP/IP host to access 
    other hosts on the network (<A 
    href="http://www.rfc-editor.org/rfc/rfc854.txt" target=_blank>RFC 854</A>). 
    <LI><I>TFTP:</I> The Trivial File Transfer Protocol (TFTP) is used for some 
    specialized simple file transfer applications. 
    <LI><I>Time/NTP:</I> Time and the Network Time Protocol (NTP) are used so 
    that Internet hosts can synchronize their system time from well-known 
    Internet time servers. 
    <LI><I>Traceroute:</I> A tool that displays the route taken by packets 
    across the Internet between a local and remote host. The <I>traceroute</I> 
    command is available on Linux/Unix systems; Windows systems starting with 
    Windows 95 have a <I>tracert</I> command utility. More information about the 
    operation and background of traceroute can be found at the <A 
    href="http://www.inetdaemon.com/tutorials/troubleshooting/tools/traceroute/definition.shtml" 
    target=_blank>InetDaemon traceroute</A> page. 
    <LI><I>Whois/NICNAME:</I> Utilities that search databases for information 
    about Internet domains and domain contact information (<A 
    href="http://www.rfc-editor.org/rfc/rfc3912.txt" target=_blank>RFC 
    3912</A>). </LI></UL>
  <P>A guide to using many of these applications can be found in "A Primer on 
  Internet and TCP/IP Tools and Utilities" (FYI 30/<A 
  href="http://www.rfc-editor.org/rfc/rfc2151.txt" target=_blank>RFC 2151</A>) 
  by Gary Kessler &amp; Steve Shepard (also available in <A 
  href="http://www.garykessler.net/library/rfc2151.html" target=_blank>HTML</A> 
  or <A href="http://www.garykessler.net/library/rfc2151.pdf" 
  target=_blank>PDF</A>).</P><A name=analysis><I>3.4.2. Protocol 
  Analysis</I></A> 
  <P>Full-blown protocol analysis is well beyond the scope of this paper. But a 
  little introduction is ok!!</P>
  <P>Today's protocol analyzers are usually software running on a computer or a 
  specialized piece of hardware. In either case, the device's network interface 
  card (NIC) operates in <I>promiscuous mode</I> so that the NIC captures every 
  packet that flies by on the wire rather than only those packets addressed to 
  this particular NIC. Most protocol analyzers also provide a display with at 
  least a partial interpretation of the packets.</P><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><IMG 
        src="Overview%20of%20TCP-IP%20and%20the%20Internet_file/analyzer_pop3.gif"><BR><B>FIGURE 
        11. Protocol analyzer display.</B> </TR></TBODY></TABLE></CENTER><BR><BR>
  <P>Figure 11 shows the display from a GN Nettest WinPharoah protocol analyzer. 
  In this case, we see the contents of a packet containing a POP3 message. The 
  analyzer's display has three parts: </P>
  <UL>
    <LI>The top part shows a summary of the frames in the capture buffer. Note 
    here that we see frames numbered 77-80 (column 1). The second column shows 
    the frame length (in bytes); all use the Ethernet II frame format (column 
    3). The next two columns list the source and destination addresses; in this 
    example, there are two communicating stations, named INSTRUCTOR (the server) 
    and WINPHAROAH (the client). The summary column shows that these are POP3 
    commands and responses. 
    <LI>The middle section shows the packet decode; a detailed discussion of 
    this is below. 
    <LI>The bottom section shows the frame in hexadecimal, as transmitted over 
    the line. This is the raw bit stream. </LI></UL>
  <P>The middle section is, indeed, the most interesting as this is where the 
  frame contents are interpreted and displayed. The details of the IP, TCP, and 
  POP3 protocols of Frame 80, the highlighted one, are shown here; the 
  interpretation of the Ethernet frame itself is also available but is scrolled 
  off the screen here.</P>
  <P>Right after the Ethernet header information is the IP packet header. Note 
  that this particular packet uses IP version 4, is 53 bytes in length, and 
  carries a TCP segment. Note also that this packet was sent from the client 
  (WINPHAROAH).</P>
  <P>After IP is the TCP information. Note that the destination port number is 
  110, the port associated with a POP3 server. Since the POP3 server port is the 
  destination, it means that this packet contains a POP command to the server 
  from the client (which we knew anyway by looking at the summary of frame 80 
  above).</P>
  <P>Finally we see the POP3 command itself. When a POP3 client connects to the 
  server, the first thing it does is send the username using the POP3 <FONT 
  face=courier>USER</FONT> command. If the username is valid, the server asks 
  for a password, which is sent from the client in a POP3 <FONT 
  face=courier>PASS</FONT> command, which is shown here. Note that the POP3 
  password is sent unencrypted!!!</P>
  <P>The discussion here is only meant to readers a taste of one of the coolest 
  tools that we get to play with in data communications; it is also an important 
  tool for network managers and security administrators.</P>
  <P>There are a fair number of free or inexpensive software packet sniffers 
  that one can acquire for Linux or Windows systems. One of the most popular is 
  <I>tcpdump</I>, which comes with many Linux distributions (e.g., Red Hat 7.1). 
  <I>WinDump</I> is a tcpdump implementation for Windows, and the same group 
  distributes Analyzer, a GUI packet sniffer. Ethereal is another GUI analyzer, 
  with version for both Windows and Linux. More information on these packages 
  can be found at the author's <A 
  href="http://www.garykessler.net/download/tcpip/sniffers.html" 
  target=_blank>Packet Sniffing and Protocol Analysis Software</A> 
  page.</P><BR><A name=summary>
  <H4>3.5. Summary</H4></A>
  <P>As this discussion has shown, <I>TCP/IP</I> is not merely a pair of 
  communication protocols but is a suite of protocols, applications, and 
  utilities. Increasingly, these protocols are referred to as the <I>Internet 
  Protocol Suite</I>, but the older name will not disappear anytime soon. 
  <BR><BR>
  <CENTER>
  <TABLE border=3 cellPadding=4>
    <TBODY>
    <TR>
      <TD><PRE> ----------------                                     ----------------
 | Application  |&lt;------ end-to-end connection ------&gt;| Application  | 
 |--------------|                                     |--------------|
 |    TCP       |&lt;--------- virtual circuit ---------&gt;|    TCP       |
 |--------------|          -----------------          |--------------|
 |     IP       |&lt;-- DG --&gt;|       IP      |&lt;-- DG --&gt;|     IP       |
 |--------------|          |-------+-------|          |--------------|
 | Subnetwork 1 |&lt;--------&gt;|Subnet1|Subnet2|&lt;--------&gt;| Subnetwork 2 |
 ----------------          --------+--------          ----------------
       HOST                     GATEWAY                     HOST
</PRE><B>FIGURE 12. TCP/IP protocol suite architecture.</B> 
  </TR></TBODY></TABLE></CENTER><BR>
  <P>Figure 12 shows the relationship between the various protocol layers of 
  TCP/IP. Applications and utilities reside in host, or end-communicating, 
  systems. TCP provides a reliable, virtual circuit connection between the two 
  hosts. (UDP, not shown, provides an end-to-end datagram connection at this 
  layer.) IP provides a datagram (DG) transport service over any intervening 
  subnetworks, including local and wide area networks. The underlying subnetwork 
  may employ nearly any common local or wide area network technology. 
  <P>Note that the term <I>gateway</I> is used for the device interconnecting 
  the two subnets, a device usually called a <I>router</I> in LAN environments 
  or <I>intermediate system</I> in OSI environments. In OSI terminology, a 
  <I>gateway</I> is used to provide protocol conversion between two networks 
  and/or applications. <BR><BR><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=info>4. Other Information 
  Sources</A></FONT></H3></CENTER>
  <P>This memo has only provided background information about the TCP/IP 
  protocols and the Internet. There is a wide range of additional information 
  that the reader can access to further use and understand the tools and scope 
  of the Internet. The real fun begins now! 
  <P>Internet specifications, standards, reports, humor, and tutorials are 
  distributed as Request for Comments (RFC) documents. RFCs are all freely 
  available on-line, and most are available in ASCII text format. 
  <P>Internet standards are documented in a subset of the RFCs, identified with 
  an "STD" designation. <A href="http://www.rfc-editor.org/rfc/rfc2026.txt" 
  target=_blank>RFC 2026</A> describes the Internet standards process and <A 
  href="http://www.rfc-editor.org/std/std1.txt" target=_blank>STD 1</A> always 
  contains the official list of Internet standards. 
  <P>For Your Information (FYI) documents are another RFC subset, specifically 
  providing background information for the Internet community. The FYI notes are 
  described in <A href="http://www.rfc-editor.org/rfc/rfc1150.txt" 
  target=_blank>RFC 1150</A>. 
  <P>Frequently Asked Question (FAQ) lists may be found for a number of topics, 
  ranging from ISDN and cryptography to the Internet and Gopher. Two such FAQs 
  are of particular interest to Internet users: "FYI on Questions and Answers - 
  Answers to Commonly asked 'New Internet User' Questions" (<A 
  href="http://www.rfc-editor.org/rfc/rfc1594.txt" target=_blank>RFC 1594</A>) 
  and "FYI on Questions and Answers: Answers to Commonly Asked 'Experienced 
  Internet User' Questions" (<A href="http://www.rfc-editor.org/rfc/rfc1207.txt" 
  target=_blank>RFC 1207</A>). All of these documents point to even more 
  information sources. <BR><BR><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=acro>5. Acronyms and 
  Abbreviations</A></FONT></H3></CENTER>
  <TABLE border=0>
    <TBODY>
    <TR>
      <TD width=100>ARP
      <TD>Address Resolution Protocol 
    <TR>
      <TD>ARIN
      <TD>American Registry for Internet Numbers 
    <TR>
      <TD>ARPANET
      <TD>Advanced Research Projects Agency Network 
    <TR>
      <TD>ASCII
      <TD>American Standard Code for Information Interchange 
    <TR>
      <TD>ATM
      <TD>Asynchronous Transfer Mode 
    <TR>
      <TD>BGP
      <TD>Border Gateway Protocol 
    <TR>
      <TD>BSD
      <TD>Berkeley Software Development 
    <TR>
      <TD>CCITT
      <TD>International Telegraph and Telephone Consultative Committee 
    <TR>
      <TD>CIX
      <TD>Commercial Internet Exchange 
    <TR>
      <TD>CDPD
      <TD>Cellular Digital Packet Data protocol 
    <TR>
      <TD>CSLIP
      <TD>Compressed Serial Line Internet Protocol 
    <TR>
      <TD>DARPA
      <TD>Defense Advanced Research Projects Agency 
    <TR>
      <TD>DDP
      <TD>Datagram Delivery Protocol 
    <TR>
      <TD>DDS
      <TD>Digital data service 
    <TR>
      <TD>DNS
      <TD>Domain Name System 
    <TR>
      <TD>DOCSIS
      <TD>Data Over Cable System Interface Specification 
    <TR>
      <TD>DoD
      <TD>U.S. Department of Defense 
    <TR>
      <TD>DWDM
      <TD>Dense Wave Division Multiplexing 
    <TR>
      <TD>FAQ
      <TD>Frequently Asked Questions lists 
    <TR>
      <TD>FDDI
      <TD>Fiber Distributed Data Interface 
    <TR>
      <TD>FTP
      <TD>File Transfer Protocol 
    <TR>
      <TD>FYI
      <TD>For Your Information series of RFCs 
    <TR>
      <TD>GOSIP
      <TD>U.S. Government Open Systems Interconnection Profile 
    <TR>
      <TD>HDLC
      <TD>High-level Data Link Control 
    <TR>
      <TD>HTML
      <TD>Hypertext Markup Language 
    <TR>
      <TD>HTTP
      <TD>Hypetext Transfer Protocol 
    <TR>
      <TD>IAB
      <TD>Internet Activities Board 
    <TR>
      <TD>IANA
      <TD>Internet Assigned Numbers Authority 
    <TR>
      <TD>ICANN
      <TD>Internet Corporation for Assigned Names and Numbers 
    <TR>
      <TD>ICMP
      <TD>Internet Control Message Protocol 
    <TR>
      <TD>IESG
      <TD>Internet Engineering Steering Group 
    <TR>
      <TD>IETF
      <TD>Internet Engineering Task Force 
    <TR>
      <TD>IMAP
      <TD>Internet Message Access Protocol 
    <TR>
      <TD>InterNIC
      <TD>Internet Network Information Center 
    <TR>
      <TD>IP
      <TD>Internet Protocol 
    <TR>
      <TD>IPX
      <TD>Internetwork Packet Exchange 
    <TR>
      <TD>ISDN
      <TD>Integrated Services Digital Network 
    <TR>
      <TD>ISO
      <TD>International Organization for Standardization 
    <TR>
      <TD>ISOC
      <TD>Internet Society 
    <TR>
      <TD>ITU-T
      <TD>International Telecommunication Union Telecommunication 
        Standardization Sector 
    <TR>
      <TD>MAC
      <TD>Medium (or media) access control 
    <TR>
      <TD>Mbps
      <TD>Megabits (millions of bits) per second 
    <TR>
      <TD>NICNAME
      <TD>Network Information Center name service 
    <TR>
      <TD>NSF
      <TD>National Science Foundation 
    <TR>
      <TD>NSFNET
      <TD>National Science Foundation Network 
    <TR>
      <TD>NTP
      <TD>Network Time Protocol 
    <TR>
      <TD>OSI
      <TD>Open Systems Interconnection 
    <TR>
      <TD>OSPF
      <TD>Open Shortest Path First 
    <TR>
      <TD>PING
      <TD>Packet Internet Groper 
    <TR>
      <TD>POP3
      <TD>Post Office Protocol v3 
    <TR>
      <TD>PPP
      <TD>Point-to-Point Protocol 
    <TR>
      <TD>RADIUS
      <TD>Remote Authentication Dial-In User Service 
    <TR>
      <TD>RARP
      <TD>Reverse Address Resolution Protocol 
    <TR>
      <TD>RIP
      <TD>Routing Information Protocol 
    <TR>
      <TD>RFC
      <TD>Request For Comments 
    <TR>
      <TD>SDH
      <TD>Synchronous Digital Hierarchy 
    <TR>
      <TD>SLIP
      <TD>Serial Line Internet Protocol 
    <TR>
      <TD>SMDS
      <TD>Switched Multimegabit Data Service 
    <TR>
      <TD>SMTP
      <TD>Simple Mail Transfer Protocol 
    <TR>
      <TD>SNAP
      <TD>Subnetwork Access Protocol 
    <TR>
      <TD>SNMP
      <TD>Simple Network Management Protocol 
    <TR>
      <TD>SONET
      <TD>Synchronous Optical Network 
    <TR>
      <TD>SSL
      <TD>Secure Sockets Layer 
    <TR>
      <TD>STD
      <TD>Internet Standards series of RFCs 
    <TR>
      <TD>TACACS+
      <TD>Terminal Access Controller Access Control System plus 
    <TR>
      <TD>TCP
      <TD>Transmission Control Protocol 
    <TR>
      <TD>TFTP
      <TD>Trivial File Transfer Protocol 
    <TR>
      <TD>TLD
      <TD>Top-level domain 
    <TR>
      <TD>UDP
      <TD>User Datagram Protocol 
    <TR>
      <TD>WAP
      <TD>Wireless Application Protocol 
    <TR>
      <TD>xDSL
      <TD>Digital Subscriber Line family of technologies 
  </TR></TBODY></TABLE><BR><BR>
  <CENTER>
  <H3><FONT color=blue face=arial><A name=author>6. About the 
  Author</A></FONT></H3></CENTER>
  <P><A href="http://www.garykessler.net/gck.html" target=_blank>Gary 
  Kessler</A>, Ph.D., CCE, CISSP is the president and janitor of <A 
  href="http://www.garykessler.net/" target=_blank>Gary Kessler Associates</A>, 
  an independent consulting and training firm specializing in computer and 
  network forensics, information security, Internet access issues, and TCP/IP 
  networking. He has written over 65 papers for industry publications. Gary's 
  main areas of interest include TCP/IP and the Internet, computer and network 
  forensics, and network security. His e-mail address is <I><A 
  href="mailto:gck@garykessler.net">gck@garykessler.net</A></I>.</P></BLOCKQUOTE><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR></FONT></BODY></HTML>
